{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The most efficient platform for the token economy \u00b6 The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201990s, with pioneers and dreamers coming together to build a new future. The objective of TomoChain is to become a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture, allowing for fast, frictionless payment and a secure, decentralised, and trusted store of value. TomoChain aims to be a public EVM-compatible blockchain with the following advantages: low transaction fee, fast confirmation time, double validation and randomization for security guarantees. TomoChain envisions an ecosystem of different DApps running on the TomoChain blockchain infrastructure. In particular, we propose a solution for solving the transaction processing performance bottleneck in Ethereum which hinders its adoption into industries, especially finance. More specifically, we are constructing an efficient and secured consensus protocol, which tackles the following main bottlenecks of classic blockchains: Efficiency: The small throughput of Bitcoin and Ethereum severely hinders a widespread adoption of such crypto- currencies. Confirmation times: Bitcoin takes on average 1 hour to confirm a transaction because the confirmation of a Bitcoin block requires 5 subsequent blocks created following it. While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes. These long confirmation times hinder many important applications (especially smart contract applications). Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks. In the newly published technical paper, TomoChain proposes the Proof-of-Stake Voting (PoSV) consensus, which is a PoS-based blockchain protocol with a fair voting mechanism, rigorous security guarantees, and uniform probability eventually. The consensus has the following key novelties: Double Validation to strengthen security and reduce fork Randomization to guarantee the fair and prevent handshaking attack Fast confirmation time and efficient checkpoints for finality or rebase","title":"Introduction"},{"location":"#the-most-efficient-platform-for-the-token-economy","text":"The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201990s, with pioneers and dreamers coming together to build a new future. The objective of TomoChain is to become a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture, allowing for fast, frictionless payment and a secure, decentralised, and trusted store of value. TomoChain aims to be a public EVM-compatible blockchain with the following advantages: low transaction fee, fast confirmation time, double validation and randomization for security guarantees. TomoChain envisions an ecosystem of different DApps running on the TomoChain blockchain infrastructure. In particular, we propose a solution for solving the transaction processing performance bottleneck in Ethereum which hinders its adoption into industries, especially finance. More specifically, we are constructing an efficient and secured consensus protocol, which tackles the following main bottlenecks of classic blockchains: Efficiency: The small throughput of Bitcoin and Ethereum severely hinders a widespread adoption of such crypto- currencies. Confirmation times: Bitcoin takes on average 1 hour to confirm a transaction because the confirmation of a Bitcoin block requires 5 subsequent blocks created following it. While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes. These long confirmation times hinder many important applications (especially smart contract applications). Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks. In the newly published technical paper, TomoChain proposes the Proof-of-Stake Voting (PoSV) consensus, which is a PoS-based blockchain protocol with a fair voting mechanism, rigorous security guarantees, and uniform probability eventually. The consensus has the following key novelties: Double Validation to strengthen security and reduce fork Randomization to guarantee the fair and prevent handshaking attack Fast confirmation time and efficient checkpoints for finality or rebase","title":"The most efficient platform for the token economy"},{"location":"general/about/","text":"Headquarters \u00b6 TomoChain Pte. Ltd. 10 Anson Road #22-15 International Plaza Singapore 079903","title":"About"},{"location":"general/about/#headquarters","text":"TomoChain Pte. Ltd. 10 Anson Road #22-15 International Plaza Singapore 079903","title":"Headquarters"},{"location":"general/faq/","text":"Frequently asked questions \u00b6 TomoCoin \u00b6 What are TomoCoins? How can I earn them? TomoCoin (TOMO) is the native cryptocurrency of TomoChain and will be the reserve cryptocurrency for all third-party apps running on TomoChain. Being the protocol token for the TomoChain infrastructure, TOMO will be needed by all parties utilising TomoChain to build apps or issue and integrate cryptographic tokens into their apps. The supply of TomoCoin is fixed, long-term and non-inflationary. In addition to the above, TomoCoin is an integral part of the TomoChain network for a number of reasons. Tomocoin will be used to fund the development of TomoChain and it's ecosystem (TomoScan, TomoMater, TomoWallet, etc.). Tomocoin will be used as a reward to incentivise the building of the TomoChain engine/ecosystem. Tomocoin will be used as a long-term, decentralized governance instrument of the TomoChain network. You can check our technical whitepaper for more details. You can trade TomoCoins on various exchanges. Take a look in the \"Exchanges\" section on this page of our main website . How are the TomoCoins distributed? The token allocation is splitted as follow: 55% goes to the token sale participants 15% goes to the company, advisors and bounties 30% goes to the Reward Engine/ Ecosystem Building program. Can I mine TomoCoins? TomoCoin is a non-mineable cryptocurrency. What is TomoCoin's total supply and circulating supply? TomoCoin total token supply is fixed at 100,000,000 TOMO. The current circulating supply is 55,000,000 TOMO. How can I send TomoCoins to my wallet? You can store TOMO in wallet supporting ERC20 Standard. We recommend to store TOMO in MYETHERWALLET + TREZOR/LEDGER NANO S + METAMASK + Mist + Parity + Trust. TomoCoin Token Address: 0x8b353021189375591723e7384262f45709a3c3dc Token Symbol: TOMO Decimals: 18 When will you list on the next exchange? We do not discuss about exchange related questions due to the regulation. We will announce every exchange news on our official canals on due time. Is TomoCoin a token? Yes, the TomoCoin is actually and ERC20 token on the Ethereum blockchain. It will be swapped to an independent token on our Mainnet release. How will it be swapped? We will lock your ERC20 tokens at an announced date before swapping them on our Mainnet to ensure consistency. Whilst tokens are locked, they are not transferable to another address. What is the price in presale and ICO? Presale Price: $0.2 ICO Price: $0.25 ( 0.0003125 ETH ) Ecosystem \u00b6 TomoChain \u00b6 What is Tomochain? How does it work? TomoChain is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. TomoChain relies on a system of 150 Masternodes with Proof of Stake Voting (POSV) consensus that can support near-zero fees and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes. TomoChain supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into TomoChain's Masternode architecture. It will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses. Is TomoChain a side chain of Ethereum? No. TomoChain will have its own blockchain when our Mainnet is launched in Q4 2018. What is the difference between TomoCoin and TomoChain? TomoCoin (TOMO) is the native currency of the TomoChain ecosystem. Blockchain \u00b6 Is there a way to see the raw data stored in the TomoChain blockchain? Yes. You can use our block explorer, TomoScan . It's pretty similar to etherscan if you are already familliar with it. Where can I check the actual products/ecosystem? For now, you can consult the Testnet as our Mainnet will launch in Q4 2018. Please read the complete Testnet announcement on our Medium post . If you want to access it directly, you can find the links to our different products deployed in Testnet on our Netwoks page. What is a masternode in the TomoChain ecosystem? A TomoChain masternode is a server who will use it's computing power to contribute to the network. It's job will be to create and signe blocks. Masternodes are elected using the PoSV consensus via our governance dApp TomoMaster What is required to become a TomoChain masternode? You need to deposit 50'000 TOMO to become a masternode candidate. Candidates become masternodes if they belong to the top 150 most voted candidates. What are the incentives to become a candidate or masternode? Masternodes will receive a significant amount of block rewards, which will likely exceeds the cost for running the infrastructure. However, masternode owners need to invest in TomoChain by depositing at least 50'000 TOMO, and stake them in the long term. After the initial deposite, if the account does not become a masternode (has less votes than the top 150 most voted candidates), he will not receive rewards. Therefore, candidates are incentivised to do as much as they can to signal their capability to support TomoChain to get into top 150 most voted candidates. What are the voters incentives? Do voters get rewards too? Token voters should vote for the candidates who demonstrate strong support to the TomoChain ecosystem. If strong candidates are voted to masternode, the network will be more powerfull and the voters will earn more rewards. More informations on the voting and reward mechanism in the economical whitepaper . Company \u00b6 Where is your company registered? You can check our informations on the Singaporean registry . You can also but the ACRA copy if you need more details How many people are in the TomoChain team? We are around twenty-five people working fulltime. We constantly adapt our hiring process depending on the new projects we get. Check us out on our main website ! Where can I take a look at the code? All the code regarding TomoChain is free to consult on our GitHub . This includes the code for the TomoChain blockchain client, governance DApp, block explorer, tools, docker images, documentation, etc. However, other blockchain related projects like ReplyBlock or drafts, work in progress and not yet disclosed projects are usually kept in private repositories. We like to publish code publicly when it reaches a certain level of development and/or when we think auditing and contributions are beneficial to the codebase. Keeping early projects private is probably more responsible for now due to our scale. It might change in the future. We are also working with some third parties with which we signed a non-disclosure-agreements for code development. Where can I contact you to get support? If you need support, please contact us on one of this platform. Technical talk and support running our softwares: Gitter (https://gitter.im/tomochain) Bugs or technical contributions: GitHub (https://github.com/tomochain) General quotes regarding our blockchain: Telegram (https://t.me/tomochain) You can keep in touch with our latest news here: Twitter: https://twitter.com/TomoChainANN Telegram Announcements: https://t.me/TomoChainChannel Facebook: https://www.facebook.com/tomochainofficial Website: https://tomochain.com Medium: https://medium.com/tomochain Reddit: https://www.reddit.com/r/Tomochain/ LinkedIn: https://www.linkedin.com/company/tomochain/","title":"FAQ"},{"location":"general/faq/#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"general/faq/#tomocoin","text":"What are TomoCoins? How can I earn them? TomoCoin (TOMO) is the native cryptocurrency of TomoChain and will be the reserve cryptocurrency for all third-party apps running on TomoChain. Being the protocol token for the TomoChain infrastructure, TOMO will be needed by all parties utilising TomoChain to build apps or issue and integrate cryptographic tokens into their apps. The supply of TomoCoin is fixed, long-term and non-inflationary. In addition to the above, TomoCoin is an integral part of the TomoChain network for a number of reasons. Tomocoin will be used to fund the development of TomoChain and it's ecosystem (TomoScan, TomoMater, TomoWallet, etc.). Tomocoin will be used as a reward to incentivise the building of the TomoChain engine/ecosystem. Tomocoin will be used as a long-term, decentralized governance instrument of the TomoChain network. You can check our technical whitepaper for more details. You can trade TomoCoins on various exchanges. Take a look in the \"Exchanges\" section on this page of our main website . How are the TomoCoins distributed? The token allocation is splitted as follow: 55% goes to the token sale participants 15% goes to the company, advisors and bounties 30% goes to the Reward Engine/ Ecosystem Building program. Can I mine TomoCoins? TomoCoin is a non-mineable cryptocurrency. What is TomoCoin's total supply and circulating supply? TomoCoin total token supply is fixed at 100,000,000 TOMO. The current circulating supply is 55,000,000 TOMO. How can I send TomoCoins to my wallet? You can store TOMO in wallet supporting ERC20 Standard. We recommend to store TOMO in MYETHERWALLET + TREZOR/LEDGER NANO S + METAMASK + Mist + Parity + Trust. TomoCoin Token Address: 0x8b353021189375591723e7384262f45709a3c3dc Token Symbol: TOMO Decimals: 18 When will you list on the next exchange? We do not discuss about exchange related questions due to the regulation. We will announce every exchange news on our official canals on due time. Is TomoCoin a token? Yes, the TomoCoin is actually and ERC20 token on the Ethereum blockchain. It will be swapped to an independent token on our Mainnet release. How will it be swapped? We will lock your ERC20 tokens at an announced date before swapping them on our Mainnet to ensure consistency. Whilst tokens are locked, they are not transferable to another address. What is the price in presale and ICO? Presale Price: $0.2 ICO Price: $0.25 ( 0.0003125 ETH )","title":"TomoCoin"},{"location":"general/faq/#ecosystem","text":"","title":"Ecosystem"},{"location":"general/faq/#tomochain","text":"What is Tomochain? How does it work? TomoChain is an innovative solution to the scalability problem of the Ethereum blockchain, and other current blockchain platforms. TomoChain relies on a system of 150 Masternodes with Proof of Stake Voting (POSV) consensus that can support near-zero fees and 2-second transaction confirmation times. Security, stability and chain finality are guaranteed via novel techniques such as double validation, staking via smart-contracts and true randomization processes. TomoChain supports all EVM-compatible smart-contracts, protocols, and atomic cross-chain token transfers. New scaling techniques such as sharding, EVM parallelisation, private-chain generation, hardware integration will be continuously researched and incorporated into TomoChain's Masternode architecture. It will be an ideal scalable smart-contract public blockchain for decentralized apps, token issuances and token integrations for small and big businesses. Is TomoChain a side chain of Ethereum? No. TomoChain will have its own blockchain when our Mainnet is launched in Q4 2018. What is the difference between TomoCoin and TomoChain? TomoCoin (TOMO) is the native currency of the TomoChain ecosystem.","title":"TomoChain"},{"location":"general/faq/#blockchain","text":"Is there a way to see the raw data stored in the TomoChain blockchain? Yes. You can use our block explorer, TomoScan . It's pretty similar to etherscan if you are already familliar with it. Where can I check the actual products/ecosystem? For now, you can consult the Testnet as our Mainnet will launch in Q4 2018. Please read the complete Testnet announcement on our Medium post . If you want to access it directly, you can find the links to our different products deployed in Testnet on our Netwoks page. What is a masternode in the TomoChain ecosystem? A TomoChain masternode is a server who will use it's computing power to contribute to the network. It's job will be to create and signe blocks. Masternodes are elected using the PoSV consensus via our governance dApp TomoMaster What is required to become a TomoChain masternode? You need to deposit 50'000 TOMO to become a masternode candidate. Candidates become masternodes if they belong to the top 150 most voted candidates. What are the incentives to become a candidate or masternode? Masternodes will receive a significant amount of block rewards, which will likely exceeds the cost for running the infrastructure. However, masternode owners need to invest in TomoChain by depositing at least 50'000 TOMO, and stake them in the long term. After the initial deposite, if the account does not become a masternode (has less votes than the top 150 most voted candidates), he will not receive rewards. Therefore, candidates are incentivised to do as much as they can to signal their capability to support TomoChain to get into top 150 most voted candidates. What are the voters incentives? Do voters get rewards too? Token voters should vote for the candidates who demonstrate strong support to the TomoChain ecosystem. If strong candidates are voted to masternode, the network will be more powerfull and the voters will earn more rewards. More informations on the voting and reward mechanism in the economical whitepaper .","title":"Blockchain"},{"location":"general/faq/#company","text":"Where is your company registered? You can check our informations on the Singaporean registry . You can also but the ACRA copy if you need more details How many people are in the TomoChain team? We are around twenty-five people working fulltime. We constantly adapt our hiring process depending on the new projects we get. Check us out on our main website ! Where can I take a look at the code? All the code regarding TomoChain is free to consult on our GitHub . This includes the code for the TomoChain blockchain client, governance DApp, block explorer, tools, docker images, documentation, etc. However, other blockchain related projects like ReplyBlock or drafts, work in progress and not yet disclosed projects are usually kept in private repositories. We like to publish code publicly when it reaches a certain level of development and/or when we think auditing and contributions are beneficial to the codebase. Keeping early projects private is probably more responsible for now due to our scale. It might change in the future. We are also working with some third parties with which we signed a non-disclosure-agreements for code development. Where can I contact you to get support? If you need support, please contact us on one of this platform. Technical talk and support running our softwares: Gitter (https://gitter.im/tomochain) Bugs or technical contributions: GitHub (https://github.com/tomochain) General quotes regarding our blockchain: Telegram (https://t.me/tomochain) You can keep in touch with our latest news here: Twitter: https://twitter.com/TomoChainANN Telegram Announcements: https://t.me/TomoChainChannel Facebook: https://www.facebook.com/tomochainofficial Website: https://tomochain.com Medium: https://medium.com/tomochain Reddit: https://www.reddit.com/r/Tomochain/ LinkedIn: https://www.linkedin.com/company/tomochain/","title":"Company"},{"location":"general/important-links/","text":"Links \u00b6 Main website Technical Whitepaper Github Testnet \u00b6 Status page Block explorer (TomoScan) Governance dApp (TomoMaster) Wallet dApp (TomoWallet) Faucet (receive free testnet TOMO)","title":"Important links"},{"location":"general/important-links/#links","text":"Main website Technical Whitepaper Github","title":"Links"},{"location":"general/important-links/#testnet","text":"Status page Block explorer (TomoScan) Governance dApp (TomoMaster) Wallet dApp (TomoWallet) Faucet (receive free testnet TOMO)","title":"Testnet"},{"location":"general/networks/","text":"Testnet \u00b6 The Testnet network is meant to be a public demo of our products and a way for us to test new features. Specifications \u00b6 Chain id: 89 RPC endpoint: https://testnet.tomochain.com Websocket endpoint: wss://testnet.tomochain.com/ws Usefull links \u00b6 Status page Block explorer (TomoScan) Governance dApp (TomoMaster) Wallet dApp (TomoWallet) Faucet (receive free testnet TOMO) For developers \u00b6 Testnet is the best way to test your smart contracts. Configure your deployment tool (truffle for example) to connect to the testnet and deploy your new code without having to worry about fees. For investors and enthusiasts \u00b6 You will find on the Testnet the exact same ecosystem as on the actual Mainnet. You can try all the features we propose like voting, running a masternode, discovering our dApps, etc.","title":"Networks"},{"location":"general/networks/#testnet","text":"The Testnet network is meant to be a public demo of our products and a way for us to test new features.","title":"Testnet"},{"location":"general/networks/#specifications","text":"Chain id: 89 RPC endpoint: https://testnet.tomochain.com Websocket endpoint: wss://testnet.tomochain.com/ws","title":"Specifications"},{"location":"general/networks/#usefull-links","text":"Status page Block explorer (TomoScan) Governance dApp (TomoMaster) Wallet dApp (TomoWallet) Faucet (receive free testnet TOMO)","title":"Usefull links"},{"location":"general/networks/#for-developers","text":"Testnet is the best way to test your smart contracts. Configure your deployment tool (truffle for example) to connect to the testnet and deploy your new code without having to worry about fees.","title":"For developers"},{"location":"general/networks/#for-investors-and-enthusiasts","text":"You will find on the Testnet the exact same ecosystem as on the actual Mainnet. You can try all the features we propose like voting, running a masternode, discovering our dApps, etc.","title":"For investors and enthusiasts"},{"location":"general/use-cases/","text":"Use Cases \u00b6 Partners willing to run applications on top of Tomochain: Social Network: https://replyblock.com Supply Chain: https://devery.io/ E-commerce: http://binkabi.io Advertising Ecosystem: https://bigbom.com To be updated ...","title":"Use cases"},{"location":"general/use-cases/#use-cases","text":"Partners willing to run applications on top of Tomochain: Social Network: https://replyblock.com Supply Chain: https://devery.io/ E-commerce: http://binkabi.io Advertising Ecosystem: https://bigbom.com To be updated ...","title":"Use Cases"},{"location":"get-started/apply-node/","text":"Once your full node is up and running, you need to apply it to make him eligible as a masternode. Getting sufficient TOMO \u00b6 As 50'000 TOMO are required to apply, the first thing to do is to fill out the following form : Loading... Our team will then review your request and send you the required funds. Note: Those TOMO are only usable in testnet, they have absolutely no trading value Applying to become a masternode \u00b6 You can now apply by going on the TomoMaster page. Login with the wallet that contains your newly received 50'000 TOMO. On the top right corner, click on \"Become a Candidate\". Enter the amount of TOMO you want to deposit (minimum 50'000). Enter your coinbase address. This is the public key of the account that your masternode is using. If your are running your node with tmn , you can simply run tmn inspect to get it. Confirm with apply and proceed to make the payement. Your full node will now be listed on TomoMaster. People can view its details and vote for it. If your node is in the top 150 most voted nodes, it will be promoted as a masternode and will start producing blocks at the next epoch. Resigning your masternode \u00b6 In case you want to stop your node, you need to resign it from the governance first in order to retrieve your locked funds. Access TomoMaster , go to your candidate detail page, and click the Resign button. Your funds will be available to withdraw 30 days after the resignation. After resigning successfully, you can stop your node. If you ran it with tmn , simply run: tmn remove At this point, your masternode is completly terminated.","title":"4. Apply your node"},{"location":"get-started/apply-node/#getting-sufficient-tomo","text":"As 50'000 TOMO are required to apply, the first thing to do is to fill out the following form : Loading... Our team will then review your request and send you the required funds. Note: Those TOMO are only usable in testnet, they have absolutely no trading value","title":"Getting sufficient TOMO"},{"location":"get-started/apply-node/#applying-to-become-a-masternode","text":"You can now apply by going on the TomoMaster page. Login with the wallet that contains your newly received 50'000 TOMO. On the top right corner, click on \"Become a Candidate\". Enter the amount of TOMO you want to deposit (minimum 50'000). Enter your coinbase address. This is the public key of the account that your masternode is using. If your are running your node with tmn , you can simply run tmn inspect to get it. Confirm with apply and proceed to make the payement. Your full node will now be listed on TomoMaster. People can view its details and vote for it. If your node is in the top 150 most voted nodes, it will be promoted as a masternode and will start producing blocks at the next epoch.","title":"Applying to become a masternode"},{"location":"get-started/apply-node/#resigning-your-masternode","text":"In case you want to stop your node, you need to resign it from the governance first in order to retrieve your locked funds. Access TomoMaster , go to your candidate detail page, and click the Resign button. Your funds will be available to withdraw 30 days after the resignation. After resigning successfully, you can stop your node. If you ran it with tmn , simply run: tmn remove At this point, your masternode is completly terminated.","title":"Resigning your masternode"},{"location":"get-started/run-node/","text":"With the recent release of TomoChain Testnet 2.0 with our PoSV consensus, you might be interested in creating a TomoChain full node and applying it to be a masternode. To run a full node and meet the requirements to apply on our governance DApp, you have to run two services: The TomoChain client , our TomoChain implementation written in Go . Telegraf , an agent to collect performance metrics of your full node. General hardware notice \u00b6 Our team extensively tested performances and came up with those minimal requirements for any TomoChain masternode host. Testnet Must be facing internet directly (no NAT, public IP) Must have at least 2 cores Must have at least 8GB of RAM Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.). Storage must be SSD Mainnet Must be facing internet directly (no NAT, public IP) Must have at least 8 cores Must have at least 32GB of RAM Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.) Storage must be SSD The full node will serve on port 30303 udp and tcp for p2p communication with other nodes, 8545 tcp for RPC api and 8546 tcp for websocket api. You may need to edit your firewall configuration accordingly. If you have other production grade environment than cloud provider at your displosal, please tell us more about on our Gitter . tmn \u00b6 We made a simple command line interface called tmn to easily and quickly start a TomoChain masternode. It takes care of starting the necessary docker containers with the proper settings for you. It will really suit you if you don't already have a big infrastructure running. Spin up a machine in your favorite cloud and get your masternode running in a few minutes! Prerequisites \u00b6 To use tmn, you should meet these requirements in addition to the hardware ones: Docker CE Python >= 3.6 Installation \u00b6 Simply install it from pip. pip3 install --user tmn Update \u00b6 Update it from pip. pip3 install -U tmn First start \u00b6 When you first start your full node with tmn, you need to give some informations. --name : The name of your full node. It should be formatted as a slug string. Slug format authorize all letters and numbers, dashes (\"-\") and underscores (\"_\"). You can name it to reflect your identity, company name, etc. --net : The network your full node will connect to. You can choose here to connect it to the TomoChain Testnet or Mainnet (once launched). --pkey : The private key of the account that your full node will use. A TomoChain full node uses an account to be uniquely identified and to receive transaction fee. Important note: we advise for security measures to use a fresh new account for your masternode. This is not the account who will receive the rewards. The rewards are sent to the account who will make the 50k TOMO initial deposit. It could look like this: tmn start --name [YOUR_NODE_NAME] \\ --net testnet \\ --pkey [YOUR_COINBASE_PRIVATE_KEY] Once started, you should see your node on the stats page ! Note: it can take up to one hour to properly sync the entire blockchain. Usage \u00b6 You can now interact with it via the other commands: stop : Stop your full node. start : Start your full node if it is stopped. status : The current status of your full node. inspect : Display the details related to your full node. Useful for applying your full node as a masternode. remove : Completely remove your masternode, unique identity and data. Troubleshooting \u00b6 tmn: command not found \u00b6 It might happen that your PATH is not set by default to include the default user binary directory. You can add it by adding it to your shell $PATH: On GNU/Linux: echo 'export PATH=$PATH:~/.local/bin' >> ~/.bashrc On MacOS: Replace [VERSION] by your version of python (3.5, 3.6, 3.7) echo 'export PATH=$PATH:~/Library/Python/[VERSION]/bin' >> ~/.bashrc error: could not access the docker daemon \u00b6 If you have installed Docker, you probably forgot to add your user to the docker group. Please run this, close your session and open it again. usermod -aG docker $your_user_name","title":"3. Run a node in testnet"},{"location":"get-started/run-node/#general-hardware-notice","text":"Our team extensively tested performances and came up with those minimal requirements for any TomoChain masternode host. Testnet Must be facing internet directly (no NAT, public IP) Must have at least 2 cores Must have at least 8GB of RAM Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.). Storage must be SSD Mainnet Must be facing internet directly (no NAT, public IP) Must have at least 8 cores Must have at least 32GB of RAM Must use an IaaS (\"cloud\") provider of your choice (AWS, Digital Ocean, Google Cloud, etc.) Storage must be SSD The full node will serve on port 30303 udp and tcp for p2p communication with other nodes, 8545 tcp for RPC api and 8546 tcp for websocket api. You may need to edit your firewall configuration accordingly. If you have other production grade environment than cloud provider at your displosal, please tell us more about on our Gitter .","title":"General hardware notice"},{"location":"get-started/run-node/#tmn","text":"We made a simple command line interface called tmn to easily and quickly start a TomoChain masternode. It takes care of starting the necessary docker containers with the proper settings for you. It will really suit you if you don't already have a big infrastructure running. Spin up a machine in your favorite cloud and get your masternode running in a few minutes!","title":"tmn"},{"location":"get-started/run-node/#prerequisites","text":"To use tmn, you should meet these requirements in addition to the hardware ones: Docker CE Python >= 3.6","title":"Prerequisites"},{"location":"get-started/run-node/#installation","text":"Simply install it from pip. pip3 install --user tmn","title":"Installation"},{"location":"get-started/run-node/#update","text":"Update it from pip. pip3 install -U tmn","title":"Update"},{"location":"get-started/run-node/#first-start","text":"When you first start your full node with tmn, you need to give some informations. --name : The name of your full node. It should be formatted as a slug string. Slug format authorize all letters and numbers, dashes (\"-\") and underscores (\"_\"). You can name it to reflect your identity, company name, etc. --net : The network your full node will connect to. You can choose here to connect it to the TomoChain Testnet or Mainnet (once launched). --pkey : The private key of the account that your full node will use. A TomoChain full node uses an account to be uniquely identified and to receive transaction fee. Important note: we advise for security measures to use a fresh new account for your masternode. This is not the account who will receive the rewards. The rewards are sent to the account who will make the 50k TOMO initial deposit. It could look like this: tmn start --name [YOUR_NODE_NAME] \\ --net testnet \\ --pkey [YOUR_COINBASE_PRIVATE_KEY] Once started, you should see your node on the stats page ! Note: it can take up to one hour to properly sync the entire blockchain.","title":"First start"},{"location":"get-started/run-node/#usage","text":"You can now interact with it via the other commands: stop : Stop your full node. start : Start your full node if it is stopped. status : The current status of your full node. inspect : Display the details related to your full node. Useful for applying your full node as a masternode. remove : Completely remove your masternode, unique identity and data.","title":"Usage"},{"location":"get-started/run-node/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"get-started/run-node/#tmn-command-not-found","text":"It might happen that your PATH is not set by default to include the default user binary directory. You can add it by adding it to your shell $PATH: On GNU/Linux: echo 'export PATH=$PATH:~/.local/bin' >> ~/.bashrc On MacOS: Replace [VERSION] by your version of python (3.5, 3.6, 3.7) echo 'export PATH=$PATH:~/Library/Python/[VERSION]/bin' >> ~/.bashrc","title":"tmn: command not found"},{"location":"get-started/run-node/#error-could-not-access-the-docker-daemon","text":"If you have installed Docker, you probably forgot to add your user to the docker group. Please run this, close your session and open it again. usermod -aG docker $your_user_name","title":"error: could not access the docker daemon"},{"location":"get-started/voting/","text":"Prerequisites \u00b6 Have a wallet connected to the Testnet (See chapter 1 ) Introduction \u00b6 With a connected wallet, it's not time to try voting for some masternodes. Get some TOMO \u00b6 Info Testnet TOMO are only used for experimenting with the testnet. They have no value in the main blockchain and not market value. Using TomoWallet \u00b6 TomoWallet provides a function named Earn TOMO to test . It allows you to get 15 TOMO on the Testnet. Just click on it and you will see your balance go up. Note You can use this function only once. You then have to use the faucet for any extra Testnet TOMO needed. Using any wallets \u00b6 We also have a service called \"Faucet\" which allows you to get 15 TOMO at a time. Access the faucet site at: faucet.testnet.tomochain.com Enter your wallet address in the field and tick the I'm not a robot box. Click REQUEST 15 TOMO and Wait for some seconds for the transaction to be confirmed. You will receive a success confirmation message and the amount of TOMO in your wallet should be updated. You can check your TOMO balance by either looking at your wallet or using TomoScan . How To Vote \u00b6 Now you have some TOMO. You can access our governance dApp, TomoMaster , to start voting for masternodes. TomoMaster natively supports Metamask. You can also access your account page (the vertical three dots on the top right) to fill in your wallet Private Key or MNEMONIC (see image below). If you use Metamask, you need to connect Mettamask to our testnet (please see the \"Create a wallet\" section) and choose Metamask in the drop-down settings list. Once configured, you can vote for masternodes by clicking on the Vote button. At least 10 TOMO is required per vote. After clicking submit, your TOMO will be sent to the voting smart contract and locked there. Reward \u00b6 Every epoch (~30 minutes), you will automatically receive rewards for each masternode you voted for. How to Unvote \u00b6 If you do not want to support a masternode you voted for, you can unvote it by clicking the Unvote button on the masternode's page and enter the amount of TOMO you want to unvote. After unvoting, your TOMO is still locked in the smart contract for 48 hours before you are able to withdraw. How to Withdraw \u00b6 For withdrawals after unvoting, you need to wait until your TOMO is unlocked from the smart contract. Then you can click the withdraw button in your account page (the vertical three dots on the top right) and choose which withdrawal you want to receive back your TOMO. Note that you might see multiple withdrawals on your account page if you made multiple unvotes previously. If you withdraw before the unlock period expires, an error will be raised.","title":"2. Voting"},{"location":"get-started/voting/#prerequisites","text":"Have a wallet connected to the Testnet (See chapter 1 )","title":"Prerequisites"},{"location":"get-started/voting/#introduction","text":"With a connected wallet, it's not time to try voting for some masternodes.","title":"Introduction"},{"location":"get-started/voting/#get-some-tomo","text":"Info Testnet TOMO are only used for experimenting with the testnet. They have no value in the main blockchain and not market value.","title":"Get some TOMO"},{"location":"get-started/voting/#using-tomowallet","text":"TomoWallet provides a function named Earn TOMO to test . It allows you to get 15 TOMO on the Testnet. Just click on it and you will see your balance go up. Note You can use this function only once. You then have to use the faucet for any extra Testnet TOMO needed.","title":"Using TomoWallet"},{"location":"get-started/voting/#using-any-wallets","text":"We also have a service called \"Faucet\" which allows you to get 15 TOMO at a time. Access the faucet site at: faucet.testnet.tomochain.com Enter your wallet address in the field and tick the I'm not a robot box. Click REQUEST 15 TOMO and Wait for some seconds for the transaction to be confirmed. You will receive a success confirmation message and the amount of TOMO in your wallet should be updated. You can check your TOMO balance by either looking at your wallet or using TomoScan .","title":"Using any wallets"},{"location":"get-started/voting/#how-to-vote","text":"Now you have some TOMO. You can access our governance dApp, TomoMaster , to start voting for masternodes. TomoMaster natively supports Metamask. You can also access your account page (the vertical three dots on the top right) to fill in your wallet Private Key or MNEMONIC (see image below). If you use Metamask, you need to connect Mettamask to our testnet (please see the \"Create a wallet\" section) and choose Metamask in the drop-down settings list. Once configured, you can vote for masternodes by clicking on the Vote button. At least 10 TOMO is required per vote. After clicking submit, your TOMO will be sent to the voting smart contract and locked there.","title":"How To Vote"},{"location":"get-started/voting/#reward","text":"Every epoch (~30 minutes), you will automatically receive rewards for each masternode you voted for.","title":"Reward"},{"location":"get-started/voting/#how-to-unvote","text":"If you do not want to support a masternode you voted for, you can unvote it by clicking the Unvote button on the masternode's page and enter the amount of TOMO you want to unvote. After unvoting, your TOMO is still locked in the smart contract for 48 hours before you are able to withdraw.","title":"How to Unvote"},{"location":"get-started/voting/#how-to-withdraw","text":"For withdrawals after unvoting, you need to wait until your TOMO is unlocked from the smart contract. Then you can click the withdraw button in your account page (the vertical three dots on the top right) and choose which withdrawal you want to receive back your TOMO. Note that you might see multiple withdrawals on your account page if you made multiple unvotes previously. If you withdraw before the unlock period expires, an error will be raised.","title":"How to Withdraw"},{"location":"get-started/wallet/","text":"Metamask \u00b6 Tomochain will guide you how to connect MetaMask to Tomochain Testnet. It is an essential step to study an overview of Tomochain features in term of meeting the crypto trading needs on system. Get started! You first need to install Extension MetaMask on Chrome or Brave browsers. Once you agree to the Metamask Terms of Use and create an account successfully, follow instructions: Step 1: Click to MetaMask logo on the browser to open the Extention -> select Network -> select Custom RPC as shown below: Step 2: When Setting screen pops up, you enter https://testnet.tomochain.com into New RPC URL Texbox then Save. Step 3: You successfully connect to Tomochain Testnet after 2 steps. Next, you use TOMO to pay a Gas fee to implement Smart Contact. To have some TOMO in the testnet, you can enter your wallet address in Faucet site https://faucet.testnet.tomochain.com/ to request some TOMO. So, you accomplish connecting the MetaMask to Tomochain (testnet). From now on, you can make transactions and develop Dapp as well as Smart Contract as you wish. MyEtherWallet \u00b6 Step 2: From MyEtherWallet homepage, at top right corner, select TomoChain Testnet Step 3: Import/create a wallet, view the balance and make a transaction to send TOMO to another address. All transactions you make will be recorded in TomoChain and transparently viewed on TomoScan. You are able to use hardware wallets (Trezor, Ledger Nano S) in MyEtherWallet to connect TomoChain Testnet. TomoWallet \u00b6 TomoWallet is now available at https://wallet.testnet.tomochain.com . You can create a wallet, get some TOMO on the testnet and transfer/receive TOMO back and forth. Note: At the moment, TomoWallet only works on Tomochain Testnet. So all TOMO you have in TomoWallet is only for testing purpose. Create a new wallet \u00b6 On the first page, click CREATE NEW WALLET button. TomoWallet will automatically create a new wallet and show up the address, qr code and the balance in your home page. Earn TOMO \u00b6 On the homepage, click Earn TOMO to test on the bottom left corner. Click REQUEST button and wait a couple of seconds to get some TOMO. Transfer TOMO \u00b6 On left menu, click Tranfer to go to Tranfer TOMO page. Enter a valid recipient address and amount TOMO you want to send and click SEND . After few seconds, your transaction will be presented at Transactions page as the below: Delete a wallet \u00b6 In case, you want to access other wallets, then delete the current wallet. Make sure you backup Private Key and Recovery Phrases so you can import your wallet again. To delete your wallet, go to details page, and click DELETE THIS WALLET button. Import your wallet \u00b6 On the first page, click IMPORT YOUR WALLET . Enter our Private Key or Recovery Phrases Click IMPORT button.","title":"1. Connect your wallet"},{"location":"get-started/wallet/#metamask","text":"Tomochain will guide you how to connect MetaMask to Tomochain Testnet. It is an essential step to study an overview of Tomochain features in term of meeting the crypto trading needs on system. Get started! You first need to install Extension MetaMask on Chrome or Brave browsers. Once you agree to the Metamask Terms of Use and create an account successfully, follow instructions: Step 1: Click to MetaMask logo on the browser to open the Extention -> select Network -> select Custom RPC as shown below: Step 2: When Setting screen pops up, you enter https://testnet.tomochain.com into New RPC URL Texbox then Save. Step 3: You successfully connect to Tomochain Testnet after 2 steps. Next, you use TOMO to pay a Gas fee to implement Smart Contact. To have some TOMO in the testnet, you can enter your wallet address in Faucet site https://faucet.testnet.tomochain.com/ to request some TOMO. So, you accomplish connecting the MetaMask to Tomochain (testnet). From now on, you can make transactions and develop Dapp as well as Smart Contract as you wish.","title":"Metamask"},{"location":"get-started/wallet/#myetherwallet","text":"Step 2: From MyEtherWallet homepage, at top right corner, select TomoChain Testnet Step 3: Import/create a wallet, view the balance and make a transaction to send TOMO to another address. All transactions you make will be recorded in TomoChain and transparently viewed on TomoScan. You are able to use hardware wallets (Trezor, Ledger Nano S) in MyEtherWallet to connect TomoChain Testnet.","title":"MyEtherWallet"},{"location":"get-started/wallet/#tomowallet","text":"TomoWallet is now available at https://wallet.testnet.tomochain.com . You can create a wallet, get some TOMO on the testnet and transfer/receive TOMO back and forth. Note: At the moment, TomoWallet only works on Tomochain Testnet. So all TOMO you have in TomoWallet is only for testing purpose.","title":"TomoWallet"},{"location":"get-started/wallet/#create-a-new-wallet","text":"On the first page, click CREATE NEW WALLET button. TomoWallet will automatically create a new wallet and show up the address, qr code and the balance in your home page.","title":"Create a new wallet"},{"location":"get-started/wallet/#earn-tomo","text":"On the homepage, click Earn TOMO to test on the bottom left corner. Click REQUEST button and wait a couple of seconds to get some TOMO.","title":"Earn TOMO"},{"location":"get-started/wallet/#transfer-tomo","text":"On left menu, click Tranfer to go to Tranfer TOMO page. Enter a valid recipient address and amount TOMO you want to send and click SEND . After few seconds, your transaction will be presented at Transactions page as the below:","title":"Transfer TOMO"},{"location":"get-started/wallet/#delete-a-wallet","text":"In case, you want to access other wallets, then delete the current wallet. Make sure you backup Private Key and Recovery Phrases so you can import your wallet again. To delete your wallet, go to details page, and click DELETE THIS WALLET button.","title":"Delete a wallet"},{"location":"get-started/wallet/#import-your-wallet","text":"On the first page, click IMPORT YOUR WALLET . Enter our Private Key or Recovery Phrases Click IMPORT button.","title":"Import your wallet"},{"location":"misc/wip/","text":"Work in progress \u00b6 We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"},{"location":"misc/wip/#work-in-progress","text":"We are working hard to provide a complete documentation for all our products but this page is not yet ready. If you have any questions, please join us on Gitter .","title":"Work in progress"},{"location":"wp-and-research/technical-whitepaper/","text":"Introduction \u00b6 version 1.0 ( pdf version ) The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201890s, with pioneers and dreamers coming together to build a new future. TomoChain can be a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture allowing for a fast, secure, frictionless payment and trusted store of value. Distributed systems have been researched in a \u201c permissioned setting \u201d where the number of participants in the system and their identities are common knowledge. In 2008, Satoshi Nakamoto - \u201cproposed his celebrated \u201cblockchain protocol\u201d which attempts to achieve consensus in a permissionless setting: anyone can join (or leave) the protocol execution (without getting permission from a centralized or distributed authority), and the protocol instructions do not depend on the identities of the players\u201d (see here ). Later on, Ethereum with its Ethereum Virtual Machine (EVM) proposed several significant enhancements compared to Bitcoin, including Smart Contracts. Both Bitcoin and Ethereum have some issues, especially with transaction processing performance. In order to construct an efficient and secured consensus protocol for TomoChain , we tackle the following main bottlenecks of classic blockchains: Efficiency: Existing blockchains as employed by major crypto-currencies(e.g., Bitcoin or Ethereum) do not scale well to handle a large transaction volume, e.g. Bitcoin and Ethereum can handle around 10 transactions/second. This small throughput severely hinders a wide-spread adoption of such crypto-currencies. Confirmation times: The 10 minutes Bitcoin block-time is significantly larger than network latency. Furthermore, a Bitcoin block requires 5 subsequent blocks following it so that it can be confirmed; thus it takes on average one hour for a transaction to be confirmed (with low confidence). While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes Cardano . These long confirmation times hinder many important applications (especially smart contract applications). Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks. With the motivation as mentioned above, our persistent and ultimate goal of research is to propose the consensus protocol focusing on the following key strategies: Double Validation to strengthen security and reduce fork Randomization to guarantee the fair and prevent handshaking attack Fast confirmation time and efficient checkpoints for finality or rebase To start dealing with these problems, in this paper, we present an overview architectural design of TomoChain \u2019s master nodes. In particular, we propose (PoSV) consensus, a Proof-of-Stake (PoS)-based blockchain protocol with a fair voting mechanism, rigorous security guarantees and fast finality. We also present a novel reward mechanism and show that, with this mechanism, the blockchain has a low probability of forks, fast confirmation times, plus the contributions and benefits of masternodes are fair in the sense that the probability distribution function is uniform eventually. Structure of the remainder of the paper \u00b6 Section TomoChain Overview : explains the intuition ideas and overview architectural design of masternodes, framework and background protocols that help mass readers (e.g., investors, traders, others) who may not have technical knowledge understand our mechanism easily. Section Stakeholders & Voting presents TomoChain stakeholder policy, masternode committee voting systems, and reward mechanism. Section TomoChain consensus protocol explains the motivation and double validation process as well as finality checkpoint of the protocol. In Section Protocol formalizations , we present the formalization of our model in a mathematical way to show the soundness of our model and protocol. Section Security Analysis discusses the security analysis and resistant strain of potential attacks. We discuss and compare TomoChain with several existing blockchains in Section related work . Finally, we conclude the paper in Section Conclusion . TomoChain Masternode Design \u00b6 The TomoChain architecture \u00b6 The TomoChain blockchain is produced and maintained by a set of masternodes in a consistent manner through the TomoChain consensus protocol as shown in Fig. architecture . These masternodes are full nodes that hold TOMO. For a token holder to become a masternode, two requirements must be satisfied: The token holder must hold at least a minimum required amount of tokens (see next section for more details). The token holder must be one of the most voted masternode candidates in the system. The voting by token holders is credited through a Voting DApp that allows token holders to send TOMO through the smart contract mechanism . In addition to the voting system which is an improvement over the current Bitcoin and Ethereum blockchain, TomoChain also provides a new technique, namely Double Validation complemented with a Randomization mechanism. This new technique significantly decreases the probability of having invalid blocks in the blockchain. These enhancements and the components of TomoChain are step-by-step detailed in the followings. Stakeholders & Voting \u00b6 Token holders, Masternodes \u00b6 Token holder is as simple as its name: users who join the network, who own and transfer TOMO. Masternodes are full-nodes which maintain a copy of the blockchain, produce blocks and keep the chain consistent. It is worth noting that, TomoChain does not have miners as in the current Proof-of-Work-based blockchain systems such as Bitcoin and Ethereum. Only masternodes can produce and validate blocks. Masternodes are selected via a voting system. The first requirement of being masternodes is to deposit 50 000 TOMO to the Voting Smart Contract. Then, these depositors are listed as masternode candidates in the Voting DApp, which allows token holders to vote for them by sending TOMO to the smart contract. Masternodes which work hard in the system to create and verify blocks will be incentivized with TOMO. Furthermore, token holders who vote for these incentivized masternodes will also receive TOMO in proportion to the amount of TOMO they have invested via ballots. TomoChain engineers take responsibility to design that fair, explicit, automated and accountable reward mechanism. The list of masternode candidates is dynamically sorted based on voted tokens. The performance of the masternodes will be tracked and reported back to the token holders in terms of three main metrics: CPU/Memory charts which ensure the workload of the masternodes, the number of signed blocks which indicates their work performance and the last signed block which figures out their last activity. Token holders, at any time, can unvote masternodes, who have low performance, and give their votes to the other masternodes who have beter performance. Token holders have incentives to do that because their voted tokens are seen as investment to their supported masternodes, thus they should choose a voting strategy in order to maximize their profit from the investment. This simple trick keeps the system healthy since masternodes always have to race for their position so that all weak masternodes will eventually be eliminated. Therefore, only the strongest masternodes are voted and can flourish. Voting & Masternode Committee \u00b6 There are maximum one hundred fifty masternodes elected in the masternode committee. The required amount of deposit for masternode role is set at 50 000 TOMO. This amount is locked in a voting smart contract . Once a masternode is demoted (by not remaining in the top one hundred fifty voted masternodes) or intentionally quits the masternode candidates list/masternode committee, the deposit will have been locked for a month. Token holders can vote at any time, by any number of votes (which is actually counted by the amount of TOMO they bet on some masternode candidates). They can use masternode\u2019s performance statistics in the governance Voting DApp as reference information to give votes. The set of masternodes is dynamically sorted by the amount of TOMO and counted up to one hundred fifty, upon reception of votes. Reward Mechanism \u00b6 For each iteration of 900 blocks (called epoch), a checkpoint block is created, which implements only reward works. The masternode, who takes turn in the circular and sequential order to create blocks, has to scan all of the created blocks in the epoch and count number of signatures. The reward mechanism is designed following the policy as follows: the higher number of signatures one masternode has made, the more reward he earns. For instance, within an epoch, masternode A who has sealed twice the blocks than masternode B earns double amount of TOMO than masternode B does. Furthermore, there is also a reward sharing ratio among token holders and masternode who has been elected supported by the token holders. Specifically, each epoch consists of 900 blocks, which will reward a total of 250 TOMO in the first two years. This amount of 250 TOMO will be divided to all of the Masternodes proportionally to the number of signatures they sign during the epoch. Afterward, the reward achieved by each Masternode will be divided into three portions. - Infrastructure Reward : The first portion of 40% called Infrastructure Reward goes to the Masternode. Staking Reward : The second portion of 50% called Staking Reward goes to the pool of all voters for that Masternode which is shared proportionally based on the token stake. Foundation Reward : The last portion of 10% called Foundation Reward goes to a special account controlled by the Masternode Foundation, which is run by TomoChain company initially. It is worth noting that coin-holders who unvote before the checkpoint block will not receive any shared reward in the Staking Reward portion. TomoChain Consensus Protocol \u00b6 Double Validation Process \u00b6 In TomoChain, masternodes share equal responsibility to run the system and keep it stable. Full nodes should run on powerful hardware configuration and high-speed network connectivity in order to ensure the required block time (target to two seconds). Only masternodes can produce and seal blocks. In order for that, the TomoChain consensus relies on the concept of Double Validation that improves some existing consensus mechanisms, namely Single Validation . In the followings, we first describe the Double Validation , then analyze the differences and improvements of Double Validation compared to Single Validation . Double Validation (DV) \u00b6 Similar to some existing PoS-based blockchains such as Cardano , each block is created by a block producer, namely masternode, that takes its block creation permission turn following a pre-determined and circular sequence of masternodes for each epoch. However, differently from these existing blockchains, DV in TomoChain requires the signatures of two masternodes on a block to be able to push the block to the blockchain. One of the masternodes is the block creator while the other one, namely block verifier is randomly selected among the set of voted masternodes that validates the block and signs it. In the followings, for more convenience, block creator and block verifier are used interchangeably for the masternode 1 (block producer) and the randomly selected masternode 2 for a block, respectively. The process of randomly selecting the block verifiers is detailed in the next paragraphs. Note that, there is no mining in the block creation as in Proof-of-Work-based blockchains (e.g. Ethereum and Bitcoin). It means that a created block is valid if and only if it is sealed by enough two signatures from a block creator and a corresponding block verifier to confirm the correctness of it. We believe this DV technique enhances the stability of the blockchain by diminishing the probability of producing \u201cgarbage\u201d blocks while still maintaining the system security and consistency. Randomization of block verifiers in DV is the key factor of reducing risks coming from paired masternodes trying to commit malicious blocks. Furthermore, comparing to some current public blockchains in the market, by utilizing the DV technique, TomoChain brings significant improvements in the block time by only requiring two signatures per block. For the purpose of showing our enhancement over existing PoS-based blockchains, we analyze the differences between DV and the Single Validation mechanism in some existing blockchains as follows. Improvements of Double Validation over Single Validation \u00b6 Let\u2019s show the improvements of DV compared to Single Validation through analyzing some attacking scenarios as shown in Fig. Single Validation example and Fig. Double Validation example . Single Validation In Single Validation, in an epoch, each masternode, e.g. M1, sequentially takes its turn to create a block, e.g. block100. The next masternode, e.g. M2, in the sequence then validates the created block100. If block100 is invalid (that potentially means that M1 is an attacker) and contains a transaction that invalidly benefits M1, if M2 is honest (see Fig. SV a ), it rejects block100 and creates another block100 next to block99. But, if M2 is an attacker (see Fig. SV b ) that corporates with M1, M2 ignores the invalidation of block100, signs it and creates next block, namely block101 that is valid. Then, the next masternode M3 verifies that block101 is valid, M3 signs block101 and creates a block102. By this way, Single Validation potentially leaves the blockchain with \u201cgarbage\u201d or invalid blocks which require a \u201crebase\u201d to restore the validity of the blockchain. Single Validation (SV): (a) SV with block creation masternode as an attacker and (b) SV with two consecutive block creation masternodes as attackers Double Validation We claim that our DV technique significantly reduces the probability of having garbage blocks in the blockchain. Assuming that M1 and M2 are the block creator and block verifier, respectively, for block100 in our DV. If block100 is invalid and M2 is honest (see Fig. DV a ), M2 will not seal this block. Therefore, the next block creator M3 for creating block101 will see that block100 does not have enough 2 signatures, thus reject block100 and create another block100 next to block99. On the other hand, if M2 is also an attacker pairing/handshaking with M1 (see Fig. DV b ), M2 signs block100 despite its invalidity (remember that the block verifier M2 is randomly selected, there has little chance of successfully pairing M1 and M2). Next, even though M3 will verify that block100 has two valid signatures, M3 still rejects it because block100 is invalidated by M3 that will create another valid block100. In order to break the stability and consistency of the blockchain in this case, M3 should be an attacker together with M1 and M2, which, however, has a very low probability. In other words, DV strengthens the consistency of the blockchain and makes it hard to break. Double Validation (DV): (a) DV with block creator as an attacker and (b) DV with both block creator and block verifier as attackers Randomization for Block Verifiers for Double Validation \u00b6 The First Masternode/Block Creator \u00b6 The first masternode/block creator in a given epoch e can be selected by a round-turn game and can be formal defined as an array: \\begin{bmatrix} \\nu_1 \\end{bmatrix} = \\begin{bmatrix} V_{1.1}^e \\\\ V_{1.2}^e\\\\ \\cdot\\\\ \\cdot\\\\ \\cdot\\\\ V_{1.n-1}^e\\\\ V_{1.n}^e\\\\ \\end{bmatrix} Random Matrix and Smart Contract \u00b6 Let m be the number of masternodes, n be the number of slots in an epoch. In order to randomly generate the block verifiers for the next epoch e+1 , the process is performed by the following steps. Step 1: Random Numbers Generation and Commitment Phase: First, at the beginning of epoch e , each masternode V_i will securely create an array of n+1 special random numbers Recommend_i= [ r_{i.1}, r_{i.2}, ..., r_{i.n}, \\theta_i] , where r_{i.k}\\in [1, ..., m] indicating the recommendation of ordered list of block verifiers for the next epoch of V_i , and \\theta_i \\in \\{-1, 0, 1\\} is used for increasing the unpredictability of the random numbers. Second, each masternode V_i has to encrypt the array Recommend_i using a secret key SK_i , say Secret_i = Encrypt (Recommend_i, SK_i) . Next, each masternode forms a \" lock \u201d message that contains encrypted secret array Secret_i ; signs off this message with its blockchain\u2019s private key through the Elliptic Curve Digital Signature Algorithm (ECDSA) scheme currently used in Ethereum and Bitcoin along with the corresponding epoch index and its public key generated from its private key. By doing this, every masternode can check who created this lock message through ECDSA verification scheme and which epoch it relates to. Then, each node V_i sends their lock message with its signature and public key to a Smart contract stored in the blockchain, so that eventually each masternode collects and knows the lock s from all other masternodes. Step 2: Discovery and Recovery Phase: The recovery phase is for every node to reveal its previous lock message so that other nodes can get to know the secret array it has sent before. A masternode only starts revealing its lock message if all masternodes have sent their lock messages to the smart contract or a certain timeout event occurs. Each masternode then opens its lock message by sending an \u201d unlock \u201d message to the smart contract for other masternodes to open the corresponding lock. Imagine a commitment-like scheme in this case where a lock message is a commitment message locking its contained recommendation array Recommend_i (so that no one can open or guess the contained array), and the unlock message gives the key for other masternodes to decrypt the box and retrieve the values of Recommend_i . Eventually, a masternode has both locks and unlocks of others. If some elector is an adversary which might publish its lock but not intend to send the corresponding unlock, other masternodes can ignore the adversary\u2019s lock and set all its random values be 1 as default. The idea is simple: the network can keep working successfully even if some masternodes are adversaries. Step 3: Assembled Matrix and Computation Phase: At the point of the slot n^{th} of the epoch e , the secret arrays Secret_I in the smart contract will be decrypted by each masternode and return the plain version of Recommend_i . Each tuple of the first n numbers of each V_i will be assembled as the i^{th} column of an n \\times m matrix. All the last number \\theta_i forms a m\\times 1 matrix. Then each nodes will compute the block verifiers ordered list by some mathematical operations as explained below. The resulting output is a matrix n \\times 1 indicating the order of block verifiers for the next epoch e+1 . The Second Masternode/Block Verifier \u00b6 Then, each node soon compute the common array \\nu_2 for the order of the block verifiers by the following steps as in the upper equation as belows. Then, \\nu_2 is obtained by modulo operation of element values of \\nu'_2 as in the lower equation in the followings: \\label{eq:matrix} \\begin{bmatrix} \\nu'_2 \\end{bmatrix} = \\begin{bmatrix} v_{2.1}^{e+1} \\\\ v_{2.2}^{e+1} \\\\ \\vdots \\\\ v_{2.n}^{e+1} \\end{bmatrix} = \\begin{bmatrix} r_{1.1} & r_{2.1} & \\cdots & r_{m.1} \\\\ r_{1.2} & r_{2.2} & \\ddots & \\vdots \\\\ r_{1.3} & \\ddots & \\ddots & r_{m.3} \\\\ \\vdots & & r_{m-1.n-1} & r_{m.n-1} \\\\ r_{1.n} & \\cdots & r_{m-1.n} & r_{m.n} \\end{bmatrix} \\begin{bmatrix} \\theta_1 \\\\ \\theta_2 \\\\ \\theta_3 \\\\ \\vdots \\\\ \\theta_m \\end{bmatrix} \\label{eq:eq2} \\begin{bmatrix} \\nu_2 \\end{bmatrix} = \\begin{bmatrix} \\nu'_2 & mod & m \\end{bmatrix} = \\begin{bmatrix} \\left| v_{2.1}^{e+1}\\right| & mod & m \\\\ \\left| v_{2.2}^{e+1} \\right| & mod & m\\\\ \\vdots \\\\ \\left| v_{2.n}^{e+1} \\right| & mod & m \\end{bmatrix} Finality Analysis \u00b6 \"There is a standard definition of \u201ctotal economic finality\u201d: it takes place when \\frac{3}{4} of all masternodes make maximum-odds bets that a given block or state will be finalized. This condition offers very strong incentives for masternodes to never try colluding revert the block: once masternodes make such maximum-odds bets, in any blockchain where that block or state is not present, the masternodes lose their entire deposit\" (see here . TomoChain keeps that standardization in the design so that one block is considered as irreversible if it collects at least \\frac{3}{4} signatures of all masternodes committee. The time-line of blockchain creation process, checking finality and mark the block as immutable is described as in Figure: ChainMaking below. Consensus Protocol: Formalization \u00b6 Basic Concepts & Protocol Description \u00b6 In order to have a solid foundation for us to prove that our blockchain can achieve what are claimed, we first present our preliminary formalizations of the concepts that will be used in our yellow paper later. To start, as we are dealing with proof of stake consensus algorithm, we follow the way of formalization in the recent works in the literature like Cardano and here and here here . In particular, we recall the following concepts and definitions that were presented in Cardano and adapt them to the context of TomoChain. Time, Slots, Epoch \u00b6 As previously described, ideally, each epoch is divided into 900 block time, that is called block slot. Only one block can be created in a slot. We assume that there is a roughly synchronized clock that allows for masternodes to learn the current slot. This simplification will effectively permit masternodes to execute the signing and validation process of the PoSV consensus, where each masternode must collectively create a block to the current slot. For more simplification, each slot sl_r is accessed by an integer r \\in \\{1, 2, ...900\\} , and suppose that the real time window that corresponds to each slot has the following properties, which are similar to what are specified in Cardano . Every masternode can determine the index of the current slot based on the current time and \u201dany discrepancies between parties\u2019 local time are insignificant in comparison with the length of time represented by a slot\u201d Cardano The amount of a slot time is sufficient to guarantee that any message transmitted by an honest party at the beginning of the time window will be received by any other honest party by the end of that time window. While this assumption similar to Cardano , TomoChain requires it in order for a block creator to propagate its created block to the corresponding block verifier to ensure that the block is signed by both the masternodes before the next block creator builds another block on top of it. As mentioned in Section TomochainOverview , in our setting, we assume that the fixed collection of m (150) masternodes V_1, V_2, ...., V_m interact throughout the protocol. For each V_i a public/private key pair ( pk_i , sk_i ) for a prescribed signature scheme, ideally ECDSA, is generated. Furthermore, we assume that the public keys pk_1 ,.., pk_m of the masternodes are distributed and known by all of them (that means a masternode knows all public keys of other nodes). Some notable definitions of the blockchain concepts are defined following the notation in here . State A state (defined as in here ) is an encoded string st \\in \\{0,1\\}^\\lambda . Block A block (defined as in here ) B generated at a slot sl_i \\in \\{sl_1,...,sl_R\\} contains the current state st \\in \\{0, 1\\}^{\\lambda} , data d \\in \\{0, 1\\}^{*} , the slot number sl_i and a signature \\Sigma = Sign_{ski} (st, d, sl_i) computed under sk_i corresponding to the masternode V_i generating the block. Blockchain A blockchain (defined as in here ) C is a sequence of blocks B_1,..., B_n associated with a strictly increasing sequence of slots for which the state sti of B_i is equal to H(B_{i\u22121}) , where H is a collision-resistant cryptography hash function. A blockchain has a number of properties, including the length of a chain len(C) = n , which is its number of blocks, and the block B_n is the head of the chain, denoted head(C) . As mentioned earlier, in our TomoChain model, we set each time slot sl_i as 2 seconds; an epoch is a set R of 900 slots \\{ sl_1, sl_2, ..., sl_{900}\\} (an epoch time duration equals to 1800 seconds). In summary, the consensus protocol of TomoChain can be formalized in Algorithm ValidatorGeneration. The Algorithm ValidatorGeneration is simulated and explained as a process shown in Fig. EpochProcess . Security Analysis \u00b6 Nothing-at-stake \u00b6 Nothing-at-stake is a well-known problem in PoS-based blockchain, just like 51% attack in PoW algorithm. PoW-based miners require CapEx (capital expenditures) for buying mining equipment such as ASICs and OpEx (operation expenditures) such as electricity to solve mathematical puzzles securing the network (see here ). That means, there is always an intrinsic cost for miners in mining regardless of its success. In case of a fork, miners therefore always allocate their resource (equipment) to the chain that they believe is correct in order to get incentives for compensating the intrinsic costs in mining. In the contrary, in PoS-based systems without mining, during an ideal execution, for creating a fork only costs, masternodes actually do not incur intrinsic costs, other than roughly some block validation and signing cost. As a result, there\u2019s an inherent problem of the masternode having no downside to staking both forks. Therefore, there are actually two issues in the original design of PoS. On one hand, for any masternode, the optimal strategy is to validate every chain/fork, so that the masternode gets their rewards no matter which fork wins. On the other hand, for attackers/malicious masternodes, they can easily create a fork for double spending. Let\u2019s look back how TomoChain handles these two problems. As a reminder, TomoChain maintains a certain order of masternodes in creating and sealing blocks, in each epoch. For the first issue, random/arbitrary forks are hardly happened because the order of block creation masternodes is pre-determined for each epoch. Furthermore, the Double Validation mechanism eliminates the second issue because even one malicious masternode creates two blocks at his turn, only one block then can be validated by the second randomly selected masternode. Long-range attack \u00b6 In TomoChain , block is valid only if it collects double validation and finalized once \\frac{3}{4} of masternodes verify. Therefore, as long as the number of attackers or malicious nodes and/or fail-stop nodes is less equal than \\frac{1}{4} the number of masternodes, the number of masternodes signing a block is at least \\frac{3}{4} the total number of masternodes, which makes the block finalized. Thus, there is no chance for one malicious masternode to create longer valid chain because other masternodes will refuse it. Censorship Attack \u00b6 If there are more than \\frac{3}{4} malicious masternodes in TomoChain , censorship attack might happen. For example, these masternodes refuse valid blocks or simply become inactive. In this case, chain is stuck. In fact, masternodes are paid for their effort of correctly working so that the chain is actively updated in a consistent manner. More importantly, becoming masternode means a certain amount of tokens is locked, 50 000 TOMO in particular. As a result, in order to control more than \\frac{3}{4} masternodes, attackers must hold a considerable amount of TOMO and gain huge support from token holders. And because of this, the attackers do not have incentives to do any malicious action to harm the chain. However, in worst case, TomoChain has to do a soft fork in order to reduce number of masternodes to keep the chain running and figure out slasher mechanisms for those malicious masternodes. Relay Attack \u00b6 TomoChain supports EIP155 Transactions in TomoChain are included CHAIN\\_ID specified for different public chains. Table table:chainid shows recognized CHAIN\\_ID s. CHAIN_ID Chain(s) 1 Ethereum mainnet 2 Morden (disused), Expanse mainnet 3 Ropsten 4 Rinkeby 30 Rootstock mainnet 31 Rockstock testnet 42 Kovan 61 Ethereum Classic mainnet 62 Ethereum Classic testnet 1337 Geth private chains (default) 77 Sokol, the public POA Network testnet 99 Core, the public POA Network main network 88 Mainnet 89 Testnet Safety and liveness \u00b6 Safety implies having a single agreed upon chain where there are not two or more competing chains with valid transactions in either (see here . A consensus protocol can be safe when blocks have settlement finality, or else probabilistic finality. This last sentence reveals that can provide safety because it has a settlement finality. A consensus protocol is considered live if it can eventually propagate and make valid transactions onto the blockchain (see here . An occurrence of a liveness fault is when transaction omission, information withholding, or message reordering, among a number of violations are observed. This type of fault is unlikely to happen in TomoChain because the block creation masternodes list is ordered in a pre-determined way for each epoch, thus if even an attacking masternode omits some transactions, the latter will be processed and validated by the next honest masternode in the next block. DDOS Attack \u00b6 Masternodes are encouraged to run in well-known public cloud providers such as AWS, Google Cloud or Microsoft Azure which provides multiple DDOS prevention mechanisms. Even in case that some nodes are attacked or fail-stop, the network still works correctly as long as the number of failing and/or attacked nodes is less than 1/4 of the number of masternodes. Spam Attack \u00b6 TomoChain keeps the same transaction fee mechanism as Ethereum which is indicated via gasPrice. However, TomoChain supports minimum transaction fee (at 1 wei), which somehow enables spamming that attacker tries to broadcast a huge amount of low fee transactions to the system. However, TomoChain masternodes always sort transactions and pick up only high fee transactions into the proposing block. Thus, spammers have little chance to harm the system. Related work \u00b6 Consensus plays an important role to guarantee the success of distributed and decentralized systems. Bitcoin\u2019s core consensus protocol, often referred to as Nakamoto consensus Bitcoin , realizes a \u201creplicated state machine\u201d abstraction, where nodes in a permissionless network reach agreement about a set of transactions committed as well as their ordering (see here . However, known permissionless consensus protocols such as Bitcoin\u2019s Nakamoto consensus come at a cost. Bitcoin and Ethereum rely on PoW to roughly enforce the idea of \u201cone vote per hashpower\u201d and to defend against Sybil attacks. Unfortunately, PoW-based Bitcoin and Ethereum are known to have terrible performance (Bitcoin\u2019s transaction processing performance is at peak of around 7 transactions per second as previously mentioned). Moreover, PoW is much criticized because it costs a lot of electricity energy. In order to design an efficient and cost-effective consensus protocol in the permissionless model, PoS has been discussed extensively in the Bitcoin and Ethereum forum . A PoS blockchain can substitute the costly PoW in Nakamoto\u2019s blockchain while still providing similar guarantees in terms of transaction processing in the presence of a dishonest minority of users, where this \u201cminority\u201d is to be understood here in the context of stake rather than computational power Cardano . The Ethereum design Casper , published by Buterin & Griffith, provides as its initial version a PoW/PoS hybrid consensus protocol, which might eventually switch to a pure PoS system. As in TomoChain , Ethereum Casper requires that validators (term similar to block creators) have to deposit an amount. In fact, some concepts used in TomoChain such as checkpoint blocks are borrowed from Casper. Our (PoSV) consensus protocol proposed in this paper can be seen as a hybrid model. In particular, first, we apply with voting and Double Validation to create, verify and vote for blocks smoothly and efficiently. Whenever potentials of fork branches are detected, we employ the idea in PoW to select the longest branch with the most votes and discard the other branches. This hybrid approach not only increases the performance and security of blockchain, but also reduces the fork situation in an efficient and practical manner. Recently, there are several consensus protocol research works that are closely related to TomoChain such as EOS and Ouroboros of Cardano . The mechanism of voting for masternodes for reaching consensus is utilized by Bitshares and EOS , whose consensus protocol is termed Delegated Proof-of-Stake (DPoS). DPoS is similar to the Proof-of-Stake Voting consensus of TomoChain in the sense that masternodes (block creators or witnesses in DPoS) are elected through a voting system. However, TomoChain requires that masternodes need to deposit a required minimum amount of TOMO to become a masternode candidate, which puts more pressure on the masternodes to work honestly. Furthermore, the Double Validation mechanism of TomoChain lowers the probability of handshaking attacks and having invalid blocks, as previously analyzed. EOS also has a maximum of 21 block producers for each epoch, which is less decentralized than TomoChain with a maximum of 150 masternodes elected (and this number of masternodes can be changed following the decentralized governance through voting). The research-backed Cardano blockchain solution, namely Ouroboros, with the ADA coin, which is purely based on Proof-of-Stake, promisingly claims to provide rigorous security guarantees. Similarly to TomoChain , Ouroboros has a set of block producers for each epoch for creating blocks and each block producer candidate needs to deposit a minimum amount of stake (an amount of ADA). However, note that, Ouroboros only provides Single Validation , while Double Validation of TomoChain provides several advantages over Single Validation, as previously analyzed. In Ouroboros, the order of block producers, selected among stakers, is based on a biased randomization while the TomoChain \u2019s randomization for block verifiers is potentially uniform and based on smart contracts. Furthermore, the use of voting as in TomoChain and DPoS enables a more incentive equality between stakers: In Ouroboros, stakers with very little stake have a very small probability of becoming block creators, while, in TomoChain , these stakers can choose an optimal strategy to vote for potential masternodes to get incentives. Conclusion and perspectives \u00b6 In this paper, we proposed PoSV, a PoS Voting-based blockchain protocol with heuristic and fair voting mechanism, rigorous security guarantees, and fast finality. We also presented a novel reward mechanism and show that, with this mechanism, the blockchain has a low probability of having forks, fast confirmation time, plus the contributions and benefits of masternodes are fair in the sense that the probability distribution function is uniform eventually. Perspectives \u00b6 Future work The TomoChain team is currently working on the implementation of the Proof-of-Stake Voting, which will be released on schedule as stated in our roadmap. Furthermore, in parallel with our novel consensus protocol, we will investigate the Sharding mechanism in order to provide even better transaction processing performance. We believe that, the Sharding technique with the stable number of masternodes will provide better stability and efficiency to the blockchain. At the same time, we commit to keep EVM-compatible smart contracts within our masternode sharding framework. Economic sustainability is also an important concept for a blockchain based decentralized network. That means to maintain the network in a sustainable condition, an equilibrium needs to be achieved, in which the cost of running the network infrastructure could be offset by the revenues generated. In this context, the cost of network infrastructure consists of two parts: the physical cost of having hardware such as servers, memories that passes the network technical requirements; and the capital cost of having TOMO locked into smart-contracts. The revenues for Masternodes would primarily come from Reward Engine emission, and later on from service revenues such as token exchange fees provided by applications running on top of TomoChain. We will publish a TomoChain economic analysis and proposal, separate from this technical paper in a later date. References \u00b6 Satoshi Nakamoto. Bitcoin: A peer-to-peer electronics cash system. 2008. pdf Ethereum Foundation. Ethereum\u2019s White Paper. , 2014. Online available 25/05/2018. link . D. Larimer. Delegated Proof-of-Stake (DPOS). BitShare White Paper 2014. link . S. King and S. Nadal. PPCoin: Peer-to-peer crypto-currency with proof-of-stake. Self-Published, 2012. pdf V. Buterin. On public and private blockchains. Ethereum Blog, 2015. link . A. Kiayias, A. Russell, B. David, and R. Oliynykov: Ouroboros: A Provably Secure Proof-of-Stake Blockchain Protocol. IACR-CRYPTO-2017. pdf D. Mingxiao, et al. A Review on Consensus Algorithms of Blockchain. 2017 IEEE International Conference on Systems, Man, and Cybernetics (SMC) Banff Center, Banff, Canada, October 5-8, 2017 link R. Pass and E. Shi. Rethinking Large-Scale Consensus. In the Proceedings of the IEEE 30th Computer Security Foundations Symposium, 2017. Thunder Token Foundation: Thunder Consensus White Paper, Janurary, 2018 pdf . R. Pass, L. Seeman, and A. Shelat. Analysis of the Blockchain Protocol in Asynchronous Networks. In EUROCRYPTO 2017 pdf . Juan A. Garay, A. Kiayias, and N. Leonardos. The bitcoin backbone protocol: Analysis and applications. In Elisabeth Oswald and Marc Fischlin, editors, Advances in Cryptology - EUROCRYPT 2015, Volume 9057 of Lecture Notes in Computer Science, pages 281\u2013310. Springer, 2015 pdf . Tendermint Team. Understanding the Basics of a Proof-of-Stake Security Model. link . V. Buterin. On Settlement Finality. link . EOS Team. EOS.IO Technical White Paper v2. https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md . Online available 25/05/2018. link Bitshares Team. Delegated Proof-of-Stake Consensus. https://bitshares.org/technology/delegated-proof-of-stake-consensus/. Online available 25/05/2018. link R. Pass, and E. Shi. (2017). Hybrid consensus: Efficient consensus in the permissionless model. In LIPIcs-Leibniz International Proceedings in Informatics (Vol. 91). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik pdf . V. Buterin, and V. Griffith. (2017). Casper the Friendly Finality Gadget. arXiv preprint arXiv:1710.09437. link H. McCook. Under the Microscope: Economic and Environmental Costs of Bitcoin Mining. link","title":"Technical whitepaper"},{"location":"wp-and-research/technical-whitepaper/#introduction","text":"version 1.0 ( pdf version ) The blockchain industry and the infrastructure of the Internet of Value are being built rapidly around the globe, and to many the atmosphere is eerily similar to the building of the Internet in the late \u201890s, with pioneers and dreamers coming together to build a new future. TomoChain can be a leading part of this phenomenon through seamlessly merging an ecosystem of applications with cryptographic tokens used by millions of mainstream users with a unique blockchain infrastructure architecture allowing for a fast, secure, frictionless payment and trusted store of value. Distributed systems have been researched in a \u201c permissioned setting \u201d where the number of participants in the system and their identities are common knowledge. In 2008, Satoshi Nakamoto - \u201cproposed his celebrated \u201cblockchain protocol\u201d which attempts to achieve consensus in a permissionless setting: anyone can join (or leave) the protocol execution (without getting permission from a centralized or distributed authority), and the protocol instructions do not depend on the identities of the players\u201d (see here ). Later on, Ethereum with its Ethereum Virtual Machine (EVM) proposed several significant enhancements compared to Bitcoin, including Smart Contracts. Both Bitcoin and Ethereum have some issues, especially with transaction processing performance. In order to construct an efficient and secured consensus protocol for TomoChain , we tackle the following main bottlenecks of classic blockchains: Efficiency: Existing blockchains as employed by major crypto-currencies(e.g., Bitcoin or Ethereum) do not scale well to handle a large transaction volume, e.g. Bitcoin and Ethereum can handle around 10 transactions/second. This small throughput severely hinders a wide-spread adoption of such crypto-currencies. Confirmation times: The 10 minutes Bitcoin block-time is significantly larger than network latency. Furthermore, a Bitcoin block requires 5 subsequent blocks following it so that it can be confirmed; thus it takes on average one hour for a transaction to be confirmed (with low confidence). While Ethereum uses a smaller block-time, the average confirmation time still remains relatively high, around 13 minutes Cardano . These long confirmation times hinder many important applications (especially smart contract applications). Fork Generation: The problem of fork chain consumes computational energy, time, and creates potential vulnerabilities for different types of attacks. With the motivation as mentioned above, our persistent and ultimate goal of research is to propose the consensus protocol focusing on the following key strategies: Double Validation to strengthen security and reduce fork Randomization to guarantee the fair and prevent handshaking attack Fast confirmation time and efficient checkpoints for finality or rebase To start dealing with these problems, in this paper, we present an overview architectural design of TomoChain \u2019s master nodes. In particular, we propose (PoSV) consensus, a Proof-of-Stake (PoS)-based blockchain protocol with a fair voting mechanism, rigorous security guarantees and fast finality. We also present a novel reward mechanism and show that, with this mechanism, the blockchain has a low probability of forks, fast confirmation times, plus the contributions and benefits of masternodes are fair in the sense that the probability distribution function is uniform eventually.","title":"Introduction"},{"location":"wp-and-research/technical-whitepaper/#structure-of-the-remainder-of-the-paper","text":"Section TomoChain Overview : explains the intuition ideas and overview architectural design of masternodes, framework and background protocols that help mass readers (e.g., investors, traders, others) who may not have technical knowledge understand our mechanism easily. Section Stakeholders & Voting presents TomoChain stakeholder policy, masternode committee voting systems, and reward mechanism. Section TomoChain consensus protocol explains the motivation and double validation process as well as finality checkpoint of the protocol. In Section Protocol formalizations , we present the formalization of our model in a mathematical way to show the soundness of our model and protocol. Section Security Analysis discusses the security analysis and resistant strain of potential attacks. We discuss and compare TomoChain with several existing blockchains in Section related work . Finally, we conclude the paper in Section Conclusion .","title":"Structure of the remainder of the paper"},{"location":"wp-and-research/technical-whitepaper/#Sec:MasternodeDesign","text":"","title":"TomoChain Masternode Design"},{"location":"wp-and-research/technical-whitepaper/#Sec:TomochainOverview","text":"The TomoChain blockchain is produced and maintained by a set of masternodes in a consistent manner through the TomoChain consensus protocol as shown in Fig. architecture . These masternodes are full nodes that hold TOMO. For a token holder to become a masternode, two requirements must be satisfied: The token holder must hold at least a minimum required amount of tokens (see next section for more details). The token holder must be one of the most voted masternode candidates in the system. The voting by token holders is credited through a Voting DApp that allows token holders to send TOMO through the smart contract mechanism . In addition to the voting system which is an improvement over the current Bitcoin and Ethereum blockchain, TomoChain also provides a new technique, namely Double Validation complemented with a Randomization mechanism. This new technique significantly decreases the probability of having invalid blocks in the blockchain. These enhancements and the components of TomoChain are step-by-step detailed in the followings.","title":"The TomoChain architecture"},{"location":"wp-and-research/technical-whitepaper/#Sec:StakeVoting","text":"","title":"Stakeholders &amp; Voting"},{"location":"wp-and-research/technical-whitepaper/#coin-holders-masternodes","text":"Token holder is as simple as its name: users who join the network, who own and transfer TOMO. Masternodes are full-nodes which maintain a copy of the blockchain, produce blocks and keep the chain consistent. It is worth noting that, TomoChain does not have miners as in the current Proof-of-Work-based blockchain systems such as Bitcoin and Ethereum. Only masternodes can produce and validate blocks. Masternodes are selected via a voting system. The first requirement of being masternodes is to deposit 50 000 TOMO to the Voting Smart Contract. Then, these depositors are listed as masternode candidates in the Voting DApp, which allows token holders to vote for them by sending TOMO to the smart contract. Masternodes which work hard in the system to create and verify blocks will be incentivized with TOMO. Furthermore, token holders who vote for these incentivized masternodes will also receive TOMO in proportion to the amount of TOMO they have invested via ballots. TomoChain engineers take responsibility to design that fair, explicit, automated and accountable reward mechanism. The list of masternode candidates is dynamically sorted based on voted tokens. The performance of the masternodes will be tracked and reported back to the token holders in terms of three main metrics: CPU/Memory charts which ensure the workload of the masternodes, the number of signed blocks which indicates their work performance and the last signed block which figures out their last activity. Token holders, at any time, can unvote masternodes, who have low performance, and give their votes to the other masternodes who have beter performance. Token holders have incentives to do that because their voted tokens are seen as investment to their supported masternodes, thus they should choose a voting strategy in order to maximize their profit from the investment. This simple trick keeps the system healthy since masternodes always have to race for their position so that all weak masternodes will eventually be eliminated. Therefore, only the strongest masternodes are voted and can flourish.","title":"Token holders, Masternodes"},{"location":"wp-and-research/technical-whitepaper/#voting-masternode-committee","text":"There are maximum one hundred fifty masternodes elected in the masternode committee. The required amount of deposit for masternode role is set at 50 000 TOMO. This amount is locked in a voting smart contract . Once a masternode is demoted (by not remaining in the top one hundred fifty voted masternodes) or intentionally quits the masternode candidates list/masternode committee, the deposit will have been locked for a month. Token holders can vote at any time, by any number of votes (which is actually counted by the amount of TOMO they bet on some masternode candidates). They can use masternode\u2019s performance statistics in the governance Voting DApp as reference information to give votes. The set of masternodes is dynamically sorted by the amount of TOMO and counted up to one hundred fifty, upon reception of votes.","title":"Voting &amp; Masternode Committee"},{"location":"wp-and-research/technical-whitepaper/#reward-mechanism","text":"For each iteration of 900 blocks (called epoch), a checkpoint block is created, which implements only reward works. The masternode, who takes turn in the circular and sequential order to create blocks, has to scan all of the created blocks in the epoch and count number of signatures. The reward mechanism is designed following the policy as follows: the higher number of signatures one masternode has made, the more reward he earns. For instance, within an epoch, masternode A who has sealed twice the blocks than masternode B earns double amount of TOMO than masternode B does. Furthermore, there is also a reward sharing ratio among token holders and masternode who has been elected supported by the token holders. Specifically, each epoch consists of 900 blocks, which will reward a total of 250 TOMO in the first two years. This amount of 250 TOMO will be divided to all of the Masternodes proportionally to the number of signatures they sign during the epoch. Afterward, the reward achieved by each Masternode will be divided into three portions. - Infrastructure Reward : The first portion of 40% called Infrastructure Reward goes to the Masternode. Staking Reward : The second portion of 50% called Staking Reward goes to the pool of all voters for that Masternode which is shared proportionally based on the token stake. Foundation Reward : The last portion of 10% called Foundation Reward goes to a special account controlled by the Masternode Foundation, which is run by TomoChain company initially. It is worth noting that coin-holders who unvote before the checkpoint block will not receive any shared reward in the Staking Reward portion.","title":"Reward Mechanism"},{"location":"wp-and-research/technical-whitepaper/#Sec:ProtocolOverview","text":"","title":"TomoChain Consensus Protocol"},{"location":"wp-and-research/technical-whitepaper/#double-validation-process","text":"In TomoChain, masternodes share equal responsibility to run the system and keep it stable. Full nodes should run on powerful hardware configuration and high-speed network connectivity in order to ensure the required block time (target to two seconds). Only masternodes can produce and seal blocks. In order for that, the TomoChain consensus relies on the concept of Double Validation that improves some existing consensus mechanisms, namely Single Validation . In the followings, we first describe the Double Validation , then analyze the differences and improvements of Double Validation compared to Single Validation .","title":"Double Validation Process"},{"location":"wp-and-research/technical-whitepaper/#double-validation-dv","text":"Similar to some existing PoS-based blockchains such as Cardano , each block is created by a block producer, namely masternode, that takes its block creation permission turn following a pre-determined and circular sequence of masternodes for each epoch. However, differently from these existing blockchains, DV in TomoChain requires the signatures of two masternodes on a block to be able to push the block to the blockchain. One of the masternodes is the block creator while the other one, namely block verifier is randomly selected among the set of voted masternodes that validates the block and signs it. In the followings, for more convenience, block creator and block verifier are used interchangeably for the masternode 1 (block producer) and the randomly selected masternode 2 for a block, respectively. The process of randomly selecting the block verifiers is detailed in the next paragraphs. Note that, there is no mining in the block creation as in Proof-of-Work-based blockchains (e.g. Ethereum and Bitcoin). It means that a created block is valid if and only if it is sealed by enough two signatures from a block creator and a corresponding block verifier to confirm the correctness of it. We believe this DV technique enhances the stability of the blockchain by diminishing the probability of producing \u201cgarbage\u201d blocks while still maintaining the system security and consistency. Randomization of block verifiers in DV is the key factor of reducing risks coming from paired masternodes trying to commit malicious blocks. Furthermore, comparing to some current public blockchains in the market, by utilizing the DV technique, TomoChain brings significant improvements in the block time by only requiring two signatures per block. For the purpose of showing our enhancement over existing PoS-based blockchains, we analyze the differences between DV and the Single Validation mechanism in some existing blockchains as follows.","title":"Double Validation (DV)"},{"location":"wp-and-research/technical-whitepaper/#improvements-of-double-validation-over-single-validation","text":"Let\u2019s show the improvements of DV compared to Single Validation through analyzing some attacking scenarios as shown in Fig. Single Validation example and Fig. Double Validation example . Single Validation In Single Validation, in an epoch, each masternode, e.g. M1, sequentially takes its turn to create a block, e.g. block100. The next masternode, e.g. M2, in the sequence then validates the created block100. If block100 is invalid (that potentially means that M1 is an attacker) and contains a transaction that invalidly benefits M1, if M2 is honest (see Fig. SV a ), it rejects block100 and creates another block100 next to block99. But, if M2 is an attacker (see Fig. SV b ) that corporates with M1, M2 ignores the invalidation of block100, signs it and creates next block, namely block101 that is valid. Then, the next masternode M3 verifies that block101 is valid, M3 signs block101 and creates a block102. By this way, Single Validation potentially leaves the blockchain with \u201cgarbage\u201d or invalid blocks which require a \u201crebase\u201d to restore the validity of the blockchain. Single Validation (SV): (a) SV with block creation masternode as an attacker and (b) SV with two consecutive block creation masternodes as attackers Double Validation We claim that our DV technique significantly reduces the probability of having garbage blocks in the blockchain. Assuming that M1 and M2 are the block creator and block verifier, respectively, for block100 in our DV. If block100 is invalid and M2 is honest (see Fig. DV a ), M2 will not seal this block. Therefore, the next block creator M3 for creating block101 will see that block100 does not have enough 2 signatures, thus reject block100 and create another block100 next to block99. On the other hand, if M2 is also an attacker pairing/handshaking with M1 (see Fig. DV b ), M2 signs block100 despite its invalidity (remember that the block verifier M2 is randomly selected, there has little chance of successfully pairing M1 and M2). Next, even though M3 will verify that block100 has two valid signatures, M3 still rejects it because block100 is invalidated by M3 that will create another valid block100. In order to break the stability and consistency of the blockchain in this case, M3 should be an attacker together with M1 and M2, which, however, has a very low probability. In other words, DV strengthens the consistency of the blockchain and makes it hard to break. Double Validation (DV): (a) DV with block creator as an attacker and (b) DV with both block creator and block verifier as attackers","title":"Improvements of Double Validation over Single Validation"},{"location":"wp-and-research/technical-whitepaper/#randomization-for-block-verifiers-for-double-validation","text":"","title":"Randomization for Block Verifiers for Double Validation"},{"location":"wp-and-research/technical-whitepaper/#the-first-masternodeblock-creator","text":"The first masternode/block creator in a given epoch e can be selected by a round-turn game and can be formal defined as an array: \\begin{bmatrix} \\nu_1 \\end{bmatrix} = \\begin{bmatrix} V_{1.1}^e \\\\ V_{1.2}^e\\\\ \\cdot\\\\ \\cdot\\\\ \\cdot\\\\ V_{1.n-1}^e\\\\ V_{1.n}^e\\\\ \\end{bmatrix}","title":"The First Masternode/Block Creator"},{"location":"wp-and-research/technical-whitepaper/#random-matrix-and-smart-contract","text":"Let m be the number of masternodes, n be the number of slots in an epoch. In order to randomly generate the block verifiers for the next epoch e+1 , the process is performed by the following steps. Step 1: Random Numbers Generation and Commitment Phase: First, at the beginning of epoch e , each masternode V_i will securely create an array of n+1 special random numbers Recommend_i= [ r_{i.1}, r_{i.2}, ..., r_{i.n}, \\theta_i] , where r_{i.k}\\in [1, ..., m] indicating the recommendation of ordered list of block verifiers for the next epoch of V_i , and \\theta_i \\in \\{-1, 0, 1\\} is used for increasing the unpredictability of the random numbers. Second, each masternode V_i has to encrypt the array Recommend_i using a secret key SK_i , say Secret_i = Encrypt (Recommend_i, SK_i) . Next, each masternode forms a \" lock \u201d message that contains encrypted secret array Secret_i ; signs off this message with its blockchain\u2019s private key through the Elliptic Curve Digital Signature Algorithm (ECDSA) scheme currently used in Ethereum and Bitcoin along with the corresponding epoch index and its public key generated from its private key. By doing this, every masternode can check who created this lock message through ECDSA verification scheme and which epoch it relates to. Then, each node V_i sends their lock message with its signature and public key to a Smart contract stored in the blockchain, so that eventually each masternode collects and knows the lock s from all other masternodes. Step 2: Discovery and Recovery Phase: The recovery phase is for every node to reveal its previous lock message so that other nodes can get to know the secret array it has sent before. A masternode only starts revealing its lock message if all masternodes have sent their lock messages to the smart contract or a certain timeout event occurs. Each masternode then opens its lock message by sending an \u201d unlock \u201d message to the smart contract for other masternodes to open the corresponding lock. Imagine a commitment-like scheme in this case where a lock message is a commitment message locking its contained recommendation array Recommend_i (so that no one can open or guess the contained array), and the unlock message gives the key for other masternodes to decrypt the box and retrieve the values of Recommend_i . Eventually, a masternode has both locks and unlocks of others. If some elector is an adversary which might publish its lock but not intend to send the corresponding unlock, other masternodes can ignore the adversary\u2019s lock and set all its random values be 1 as default. The idea is simple: the network can keep working successfully even if some masternodes are adversaries. Step 3: Assembled Matrix and Computation Phase: At the point of the slot n^{th} of the epoch e , the secret arrays Secret_I in the smart contract will be decrypted by each masternode and return the plain version of Recommend_i . Each tuple of the first n numbers of each V_i will be assembled as the i^{th} column of an n \\times m matrix. All the last number \\theta_i forms a m\\times 1 matrix. Then each nodes will compute the block verifiers ordered list by some mathematical operations as explained below. The resulting output is a matrix n \\times 1 indicating the order of block verifiers for the next epoch e+1 .","title":"Random Matrix and Smart Contract"},{"location":"wp-and-research/technical-whitepaper/#the-second-masternodeblock-verifier","text":"Then, each node soon compute the common array \\nu_2 for the order of the block verifiers by the following steps as in the upper equation as belows. Then, \\nu_2 is obtained by modulo operation of element values of \\nu'_2 as in the lower equation in the followings: \\label{eq:matrix} \\begin{bmatrix} \\nu'_2 \\end{bmatrix} = \\begin{bmatrix} v_{2.1}^{e+1} \\\\ v_{2.2}^{e+1} \\\\ \\vdots \\\\ v_{2.n}^{e+1} \\end{bmatrix} = \\begin{bmatrix} r_{1.1} & r_{2.1} & \\cdots & r_{m.1} \\\\ r_{1.2} & r_{2.2} & \\ddots & \\vdots \\\\ r_{1.3} & \\ddots & \\ddots & r_{m.3} \\\\ \\vdots & & r_{m-1.n-1} & r_{m.n-1} \\\\ r_{1.n} & \\cdots & r_{m-1.n} & r_{m.n} \\end{bmatrix} \\begin{bmatrix} \\theta_1 \\\\ \\theta_2 \\\\ \\theta_3 \\\\ \\vdots \\\\ \\theta_m \\end{bmatrix} \\label{eq:eq2} \\begin{bmatrix} \\nu_2 \\end{bmatrix} = \\begin{bmatrix} \\nu'_2 & mod & m \\end{bmatrix} = \\begin{bmatrix} \\left| v_{2.1}^{e+1}\\right| & mod & m \\\\ \\left| v_{2.2}^{e+1} \\right| & mod & m\\\\ \\vdots \\\\ \\left| v_{2.n}^{e+1} \\right| & mod & m \\end{bmatrix}","title":"The Second Masternode/Block Verifier"},{"location":"wp-and-research/technical-whitepaper/#finality-analysis","text":"\"There is a standard definition of \u201ctotal economic finality\u201d: it takes place when \\frac{3}{4} of all masternodes make maximum-odds bets that a given block or state will be finalized. This condition offers very strong incentives for masternodes to never try colluding revert the block: once masternodes make such maximum-odds bets, in any blockchain where that block or state is not present, the masternodes lose their entire deposit\" (see here . TomoChain keeps that standardization in the design so that one block is considered as irreversible if it collects at least \\frac{3}{4} signatures of all masternodes committee. The time-line of blockchain creation process, checking finality and mark the block as immutable is described as in Figure: ChainMaking below.","title":"Finality Analysis"},{"location":"wp-and-research/technical-whitepaper/#Sec:ProtocolFormalization","text":"","title":"Consensus Protocol: Formalization"},{"location":"wp-and-research/technical-whitepaper/#basic-concepts-protocol-description","text":"In order to have a solid foundation for us to prove that our blockchain can achieve what are claimed, we first present our preliminary formalizations of the concepts that will be used in our yellow paper later. To start, as we are dealing with proof of stake consensus algorithm, we follow the way of formalization in the recent works in the literature like Cardano and here and here here . In particular, we recall the following concepts and definitions that were presented in Cardano and adapt them to the context of TomoChain.","title":"Basic Concepts &amp; Protocol Description"},{"location":"wp-and-research/technical-whitepaper/#time-slots-epoch","text":"As previously described, ideally, each epoch is divided into 900 block time, that is called block slot. Only one block can be created in a slot. We assume that there is a roughly synchronized clock that allows for masternodes to learn the current slot. This simplification will effectively permit masternodes to execute the signing and validation process of the PoSV consensus, where each masternode must collectively create a block to the current slot. For more simplification, each slot sl_r is accessed by an integer r \\in \\{1, 2, ...900\\} , and suppose that the real time window that corresponds to each slot has the following properties, which are similar to what are specified in Cardano . Every masternode can determine the index of the current slot based on the current time and \u201dany discrepancies between parties\u2019 local time are insignificant in comparison with the length of time represented by a slot\u201d Cardano The amount of a slot time is sufficient to guarantee that any message transmitted by an honest party at the beginning of the time window will be received by any other honest party by the end of that time window. While this assumption similar to Cardano , TomoChain requires it in order for a block creator to propagate its created block to the corresponding block verifier to ensure that the block is signed by both the masternodes before the next block creator builds another block on top of it. As mentioned in Section TomochainOverview , in our setting, we assume that the fixed collection of m (150) masternodes V_1, V_2, ...., V_m interact throughout the protocol. For each V_i a public/private key pair ( pk_i , sk_i ) for a prescribed signature scheme, ideally ECDSA, is generated. Furthermore, we assume that the public keys pk_1 ,.., pk_m of the masternodes are distributed and known by all of them (that means a masternode knows all public keys of other nodes). Some notable definitions of the blockchain concepts are defined following the notation in here . State A state (defined as in here ) is an encoded string st \\in \\{0,1\\}^\\lambda . Block A block (defined as in here ) B generated at a slot sl_i \\in \\{sl_1,...,sl_R\\} contains the current state st \\in \\{0, 1\\}^{\\lambda} , data d \\in \\{0, 1\\}^{*} , the slot number sl_i and a signature \\Sigma = Sign_{ski} (st, d, sl_i) computed under sk_i corresponding to the masternode V_i generating the block. Blockchain A blockchain (defined as in here ) C is a sequence of blocks B_1,..., B_n associated with a strictly increasing sequence of slots for which the state sti of B_i is equal to H(B_{i\u22121}) , where H is a collision-resistant cryptography hash function. A blockchain has a number of properties, including the length of a chain len(C) = n , which is its number of blocks, and the block B_n is the head of the chain, denoted head(C) . As mentioned earlier, in our TomoChain model, we set each time slot sl_i as 2 seconds; an epoch is a set R of 900 slots \\{ sl_1, sl_2, ..., sl_{900}\\} (an epoch time duration equals to 1800 seconds). In summary, the consensus protocol of TomoChain can be formalized in Algorithm ValidatorGeneration. The Algorithm ValidatorGeneration is simulated and explained as a process shown in Fig. EpochProcess .","title":"Time, Slots, Epoch"},{"location":"wp-and-research/technical-whitepaper/#Sec:SecurityAnalysis","text":"","title":"Security Analysis"},{"location":"wp-and-research/technical-whitepaper/#nothing-at-stake","text":"Nothing-at-stake is a well-known problem in PoS-based blockchain, just like 51% attack in PoW algorithm. PoW-based miners require CapEx (capital expenditures) for buying mining equipment such as ASICs and OpEx (operation expenditures) such as electricity to solve mathematical puzzles securing the network (see here ). That means, there is always an intrinsic cost for miners in mining regardless of its success. In case of a fork, miners therefore always allocate their resource (equipment) to the chain that they believe is correct in order to get incentives for compensating the intrinsic costs in mining. In the contrary, in PoS-based systems without mining, during an ideal execution, for creating a fork only costs, masternodes actually do not incur intrinsic costs, other than roughly some block validation and signing cost. As a result, there\u2019s an inherent problem of the masternode having no downside to staking both forks. Therefore, there are actually two issues in the original design of PoS. On one hand, for any masternode, the optimal strategy is to validate every chain/fork, so that the masternode gets their rewards no matter which fork wins. On the other hand, for attackers/malicious masternodes, they can easily create a fork for double spending. Let\u2019s look back how TomoChain handles these two problems. As a reminder, TomoChain maintains a certain order of masternodes in creating and sealing blocks, in each epoch. For the first issue, random/arbitrary forks are hardly happened because the order of block creation masternodes is pre-determined for each epoch. Furthermore, the Double Validation mechanism eliminates the second issue because even one malicious masternode creates two blocks at his turn, only one block then can be validated by the second randomly selected masternode.","title":"Nothing-at-stake"},{"location":"wp-and-research/technical-whitepaper/#long-range-attack","text":"In TomoChain , block is valid only if it collects double validation and finalized once \\frac{3}{4} of masternodes verify. Therefore, as long as the number of attackers or malicious nodes and/or fail-stop nodes is less equal than \\frac{1}{4} the number of masternodes, the number of masternodes signing a block is at least \\frac{3}{4} the total number of masternodes, which makes the block finalized. Thus, there is no chance for one malicious masternode to create longer valid chain because other masternodes will refuse it.","title":"Long-range attack"},{"location":"wp-and-research/technical-whitepaper/#censorship-attack","text":"If there are more than \\frac{3}{4} malicious masternodes in TomoChain , censorship attack might happen. For example, these masternodes refuse valid blocks or simply become inactive. In this case, chain is stuck. In fact, masternodes are paid for their effort of correctly working so that the chain is actively updated in a consistent manner. More importantly, becoming masternode means a certain amount of tokens is locked, 50 000 TOMO in particular. As a result, in order to control more than \\frac{3}{4} masternodes, attackers must hold a considerable amount of TOMO and gain huge support from token holders. And because of this, the attackers do not have incentives to do any malicious action to harm the chain. However, in worst case, TomoChain has to do a soft fork in order to reduce number of masternodes to keep the chain running and figure out slasher mechanisms for those malicious masternodes.","title":"Censorship Attack"},{"location":"wp-and-research/technical-whitepaper/#relay-attack","text":"TomoChain supports EIP155 Transactions in TomoChain are included CHAIN\\_ID specified for different public chains. Table table:chainid shows recognized CHAIN\\_ID s. CHAIN_ID Chain(s) 1 Ethereum mainnet 2 Morden (disused), Expanse mainnet 3 Ropsten 4 Rinkeby 30 Rootstock mainnet 31 Rockstock testnet 42 Kovan 61 Ethereum Classic mainnet 62 Ethereum Classic testnet 1337 Geth private chains (default) 77 Sokol, the public POA Network testnet 99 Core, the public POA Network main network 88 Mainnet 89 Testnet","title":"Relay Attack"},{"location":"wp-and-research/technical-whitepaper/#safety-and-liveness","text":"Safety implies having a single agreed upon chain where there are not two or more competing chains with valid transactions in either (see here . A consensus protocol can be safe when blocks have settlement finality, or else probabilistic finality. This last sentence reveals that can provide safety because it has a settlement finality. A consensus protocol is considered live if it can eventually propagate and make valid transactions onto the blockchain (see here . An occurrence of a liveness fault is when transaction omission, information withholding, or message reordering, among a number of violations are observed. This type of fault is unlikely to happen in TomoChain because the block creation masternodes list is ordered in a pre-determined way for each epoch, thus if even an attacking masternode omits some transactions, the latter will be processed and validated by the next honest masternode in the next block.","title":"Safety and liveness"},{"location":"wp-and-research/technical-whitepaper/#ddos-attack","text":"Masternodes are encouraged to run in well-known public cloud providers such as AWS, Google Cloud or Microsoft Azure which provides multiple DDOS prevention mechanisms. Even in case that some nodes are attacked or fail-stop, the network still works correctly as long as the number of failing and/or attacked nodes is less than 1/4 of the number of masternodes.","title":"DDOS Attack"},{"location":"wp-and-research/technical-whitepaper/#spam-attack","text":"TomoChain keeps the same transaction fee mechanism as Ethereum which is indicated via gasPrice. However, TomoChain supports minimum transaction fee (at 1 wei), which somehow enables spamming that attacker tries to broadcast a huge amount of low fee transactions to the system. However, TomoChain masternodes always sort transactions and pick up only high fee transactions into the proposing block. Thus, spammers have little chance to harm the system.","title":"Spam Attack"},{"location":"wp-and-research/technical-whitepaper/#Sec:relatedwork","text":"Consensus plays an important role to guarantee the success of distributed and decentralized systems. Bitcoin\u2019s core consensus protocol, often referred to as Nakamoto consensus Bitcoin , realizes a \u201creplicated state machine\u201d abstraction, where nodes in a permissionless network reach agreement about a set of transactions committed as well as their ordering (see here . However, known permissionless consensus protocols such as Bitcoin\u2019s Nakamoto consensus come at a cost. Bitcoin and Ethereum rely on PoW to roughly enforce the idea of \u201cone vote per hashpower\u201d and to defend against Sybil attacks. Unfortunately, PoW-based Bitcoin and Ethereum are known to have terrible performance (Bitcoin\u2019s transaction processing performance is at peak of around 7 transactions per second as previously mentioned). Moreover, PoW is much criticized because it costs a lot of electricity energy. In order to design an efficient and cost-effective consensus protocol in the permissionless model, PoS has been discussed extensively in the Bitcoin and Ethereum forum . A PoS blockchain can substitute the costly PoW in Nakamoto\u2019s blockchain while still providing similar guarantees in terms of transaction processing in the presence of a dishonest minority of users, where this \u201cminority\u201d is to be understood here in the context of stake rather than computational power Cardano . The Ethereum design Casper , published by Buterin & Griffith, provides as its initial version a PoW/PoS hybrid consensus protocol, which might eventually switch to a pure PoS system. As in TomoChain , Ethereum Casper requires that validators (term similar to block creators) have to deposit an amount. In fact, some concepts used in TomoChain such as checkpoint blocks are borrowed from Casper. Our (PoSV) consensus protocol proposed in this paper can be seen as a hybrid model. In particular, first, we apply with voting and Double Validation to create, verify and vote for blocks smoothly and efficiently. Whenever potentials of fork branches are detected, we employ the idea in PoW to select the longest branch with the most votes and discard the other branches. This hybrid approach not only increases the performance and security of blockchain, but also reduces the fork situation in an efficient and practical manner. Recently, there are several consensus protocol research works that are closely related to TomoChain such as EOS and Ouroboros of Cardano . The mechanism of voting for masternodes for reaching consensus is utilized by Bitshares and EOS , whose consensus protocol is termed Delegated Proof-of-Stake (DPoS). DPoS is similar to the Proof-of-Stake Voting consensus of TomoChain in the sense that masternodes (block creators or witnesses in DPoS) are elected through a voting system. However, TomoChain requires that masternodes need to deposit a required minimum amount of TOMO to become a masternode candidate, which puts more pressure on the masternodes to work honestly. Furthermore, the Double Validation mechanism of TomoChain lowers the probability of handshaking attacks and having invalid blocks, as previously analyzed. EOS also has a maximum of 21 block producers for each epoch, which is less decentralized than TomoChain with a maximum of 150 masternodes elected (and this number of masternodes can be changed following the decentralized governance through voting). The research-backed Cardano blockchain solution, namely Ouroboros, with the ADA coin, which is purely based on Proof-of-Stake, promisingly claims to provide rigorous security guarantees. Similarly to TomoChain , Ouroboros has a set of block producers for each epoch for creating blocks and each block producer candidate needs to deposit a minimum amount of stake (an amount of ADA). However, note that, Ouroboros only provides Single Validation , while Double Validation of TomoChain provides several advantages over Single Validation, as previously analyzed. In Ouroboros, the order of block producers, selected among stakers, is based on a biased randomization while the TomoChain \u2019s randomization for block verifiers is potentially uniform and based on smart contracts. Furthermore, the use of voting as in TomoChain and DPoS enables a more incentive equality between stakers: In Ouroboros, stakers with very little stake have a very small probability of becoming block creators, while, in TomoChain , these stakers can choose an optimal strategy to vote for potential masternodes to get incentives.","title":"Related work"},{"location":"wp-and-research/technical-whitepaper/#Sec:Conclusion","text":"In this paper, we proposed PoSV, a PoS Voting-based blockchain protocol with heuristic and fair voting mechanism, rigorous security guarantees, and fast finality. We also presented a novel reward mechanism and show that, with this mechanism, the blockchain has a low probability of having forks, fast confirmation time, plus the contributions and benefits of masternodes are fair in the sense that the probability distribution function is uniform eventually.","title":"Conclusion and perspectives"},{"location":"wp-and-research/technical-whitepaper/#perspectives","text":"Future work The TomoChain team is currently working on the implementation of the Proof-of-Stake Voting, which will be released on schedule as stated in our roadmap. Furthermore, in parallel with our novel consensus protocol, we will investigate the Sharding mechanism in order to provide even better transaction processing performance. We believe that, the Sharding technique with the stable number of masternodes will provide better stability and efficiency to the blockchain. At the same time, we commit to keep EVM-compatible smart contracts within our masternode sharding framework. Economic sustainability is also an important concept for a blockchain based decentralized network. That means to maintain the network in a sustainable condition, an equilibrium needs to be achieved, in which the cost of running the network infrastructure could be offset by the revenues generated. In this context, the cost of network infrastructure consists of two parts: the physical cost of having hardware such as servers, memories that passes the network technical requirements; and the capital cost of having TOMO locked into smart-contracts. The revenues for Masternodes would primarily come from Reward Engine emission, and later on from service revenues such as token exchange fees provided by applications running on top of TomoChain. We will publish a TomoChain economic analysis and proposal, separate from this technical paper in a later date.","title":"Perspectives"},{"location":"wp-and-research/technical-whitepaper/#Sec:References","text":"Satoshi Nakamoto. Bitcoin: A peer-to-peer electronics cash system. 2008. pdf Ethereum Foundation. Ethereum\u2019s White Paper. , 2014. Online available 25/05/2018. link . D. Larimer. Delegated Proof-of-Stake (DPOS). BitShare White Paper 2014. link . S. King and S. Nadal. PPCoin: Peer-to-peer crypto-currency with proof-of-stake. Self-Published, 2012. pdf V. Buterin. On public and private blockchains. Ethereum Blog, 2015. link . A. Kiayias, A. Russell, B. David, and R. Oliynykov: Ouroboros: A Provably Secure Proof-of-Stake Blockchain Protocol. IACR-CRYPTO-2017. pdf D. Mingxiao, et al. A Review on Consensus Algorithms of Blockchain. 2017 IEEE International Conference on Systems, Man, and Cybernetics (SMC) Banff Center, Banff, Canada, October 5-8, 2017 link R. Pass and E. Shi. Rethinking Large-Scale Consensus. In the Proceedings of the IEEE 30th Computer Security Foundations Symposium, 2017. Thunder Token Foundation: Thunder Consensus White Paper, Janurary, 2018 pdf . R. Pass, L. Seeman, and A. Shelat. Analysis of the Blockchain Protocol in Asynchronous Networks. In EUROCRYPTO 2017 pdf . Juan A. Garay, A. Kiayias, and N. Leonardos. The bitcoin backbone protocol: Analysis and applications. In Elisabeth Oswald and Marc Fischlin, editors, Advances in Cryptology - EUROCRYPT 2015, Volume 9057 of Lecture Notes in Computer Science, pages 281\u2013310. Springer, 2015 pdf . Tendermint Team. Understanding the Basics of a Proof-of-Stake Security Model. link . V. Buterin. On Settlement Finality. link . EOS Team. EOS.IO Technical White Paper v2. https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md . Online available 25/05/2018. link Bitshares Team. Delegated Proof-of-Stake Consensus. https://bitshares.org/technology/delegated-proof-of-stake-consensus/. Online available 25/05/2018. link R. Pass, and E. Shi. (2017). Hybrid consensus: Efficient consensus in the permissionless model. In LIPIcs-Leibniz International Proceedings in Informatics (Vol. 91). Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik pdf . V. Buterin, and V. Griffith. (2017). Casper the Friendly Finality Gadget. arXiv preprint arXiv:1710.09437. link H. McCook. Under the Microscope: Economic and Environmental Costs of Bitcoin Mining. link","title":"References"}]}